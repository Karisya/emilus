{"version":3,"file":"static/js/46.57e44609.chunk.js","mappings":"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","sources":["../node_modules/@react-dnd/invariant/src/index.ts","../node_modules/file-saver/src/FileSaver.js","../node_modules/react-dnd/src/hooks/useDragDropManager.ts","../node_modules/fast-deep-equal/index.js","../node_modules/react-dnd/src/hooks/useDrag/connectors.ts","../node_modules/react-dnd/src/internals/SourceConnector.ts","../node_modules/react-dnd/src/internals/DragSourceMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/DragSourceImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/useRegisteredDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragType.ts","../node_modules/react-dnd/src/hooks/useDrag/useDrag.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceMonitor.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceConnector.ts","../node_modules/react-dnd/src/internals/registration.ts","../node_modules/@react-dnd/shallowequal/src/index.ts","../node_modules/dnd-core/src/utils/js_utils.ts","../node_modules/dnd-core/src/actions/dragDrop/types.ts","../node_modules/dnd-core/src/actions/dragDrop/local/setClientOffset.ts","../node_modules/dnd-core/src/actions/dragDrop/beginDrag.ts","../node_modules/dnd-core/src/actions/dragDrop/drop.ts","../node_modules/dnd-core/src/actions/dragDrop/endDrag.ts","../node_modules/dnd-core/src/utils/matchesType.ts","../node_modules/dnd-core/src/actions/dragDrop/hover.ts","../node_modules/dnd-core/src/actions/dragDrop/publishDragSource.ts","../node_modules/dnd-core/src/classes/DragDropManagerImpl.ts","../node_modules/dnd-core/src/actions/dragDrop/index.ts","../node_modules/dnd-core/src/utils/coords.ts","../node_modules/dnd-core/src/utils/dirtiness.ts","../node_modules/dnd-core/src/classes/DragDropMonitorImpl.ts","../node_modules/@react-dnd/asap/src/makeRequestCall.ts","../node_modules/@react-dnd/asap/src/RawTask.ts","../node_modules/@react-dnd/asap/src/asap.ts","../node_modules/@react-dnd/asap/src/AsapQueue.ts","../node_modules/@react-dnd/asap/src/TaskFactory.ts","../node_modules/dnd-core/src/actions/registry.ts","../node_modules/dnd-core/src/contracts.ts","../node_modules/dnd-core/src/interfaces.ts","../node_modules/dnd-core/src/utils/getNextUniqueId.ts","../node_modules/dnd-core/src/classes/HandlerRegistryImpl.ts","../node_modules/dnd-core/src/utils/equality.ts","../node_modules/dnd-core/src/reducers/dirtyHandlerIds.ts","../node_modules/dnd-core/src/reducers/dragOffset.ts","../node_modules/dnd-core/src/reducers/dragOperation.ts","../node_modules/dnd-core/src/reducers/refCount.ts","../node_modules/dnd-core/src/reducers/stateId.ts","../node_modules/dnd-core/src/reducers/index.ts","../node_modules/dnd-core/src/createDragDropManager.ts","../node_modules/react-dnd/src/core/DndProvider.tsx","../node_modules/react-dnd/src/hooks/useIsomorphicLayoutEffect.ts","../node_modules/react-dnd/src/hooks/useOptionalFactory.ts","../node_modules/react-dnd/src/hooks/useDrop/connectors.ts","../node_modules/react-dnd/src/internals/TargetConnector.ts","../node_modules/react-dnd/src/internals/DropTargetMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/DropTargetImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/useRegisteredDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useAccept.ts","../node_modules/react-dnd/src/hooks/useDrop/useDrop.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetMonitor.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetConnector.ts","../node_modules/react-dnd/src/internals/isRef.ts","../node_modules/react-dnd/src/core/DndContext.ts","../node_modules/react-dnd/src/internals/wrapConnectorHooks.ts","../node_modules/react-dnd/src/hooks/useMonitorOutput.ts","../node_modules/react-dnd/src/hooks/useCollector.ts","../node_modules/react-dnd/src/hooks/useCollectedProps.ts","../node_modules/react-dnd-html5-backend/src/utils/js_utils.ts","../node_modules/react-dnd-html5-backend/src/EnterLeaveCounter.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/NativeDragSource.ts","../node_modules/react-dnd-html5-backend/src/NativeTypes.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/getDataFromDataTransfer.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/nativeTypesConfig.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/index.ts","../node_modules/react-dnd-html5-backend/src/BrowserDetector.ts","../node_modules/react-dnd-html5-backend/src/MonotonicInterpolant.ts","../node_modules/react-dnd-html5-backend/src/OffsetUtils.ts","../node_modules/react-dnd-html5-backend/src/OptionsReader.ts","../node_modules/react-dnd-html5-backend/src/HTML5BackendImpl.ts","../node_modules/react-dnd-html5-backend/src/index.ts"],"sourcesContent":["/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nexport function invariant(condition: any, format: string, ...args: any[]) {\n\tif (isProduction()) {\n\t\tif (format === undefined) {\n\t\t\tthrow new Error('invariant requires an error message argument')\n\t\t}\n\t}\n\n\tif (!condition) {\n\t\tlet error\n\t\tif (format === undefined) {\n\t\t\terror = new Error(\n\t\t\t\t'Minified exception occurred; use the non-minified dev environment ' +\n\t\t\t\t\t'for the full error message and additional helpful warnings.',\n\t\t\t)\n\t\t} else {\n\t\t\tlet argIndex = 0\n\t\t\terror = new Error(\n\t\t\t\tformat.replace(/%s/g, function () {\n\t\t\t\t\treturn args[argIndex++]\n\t\t\t\t}),\n\t\t\t)\n\t\t\terror.name = 'Invariant Violation'\n\t\t}\n\n\t\t;(error as any).framesToPop = 1 // we don't care about invariant's own frame\n\t\tthrow error\n\t}\n}\n\nfunction isProduction() {\n\treturn (\n\t\ttypeof process !== 'undefined' && process.env['NODE_ENV'] === 'production'\n\t)\n}\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { DragDropManager } from 'dnd-core'\nimport { useContext } from 'react'\n\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import { useMemo } from 'react'\n\nimport type { SourceConnector } from '../../internals/index.js'\n\nexport function useConnectDragSource(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragSource(), [connector])\n}\n\nexport function useConnectDragPreview(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragPreview(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { ReactElement, Ref, RefObject } from 'react'\n\nimport type { DragPreviewOptions, DragSourceOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport interface Connector {\n\thooks: any\n\tconnectTarget: any\n\treceiveHandlerId(handlerId: Identifier | null): void\n\treconnect(): void\n}\n\nexport class SourceConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdragSource: (\n\t\t\tnode: Element | ReactElement | Ref<any>,\n\t\t\toptions?: DragSourceOptions,\n\t\t) => {\n\t\t\tthis.clearDragSource()\n\t\t\tthis.dragSourceOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragSourceRef = node as RefObject<any>\n\t\t\t} else {\n\t\t\t\tthis.dragSourceNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragSource()\n\t\t},\n\t\tdragPreview: (node: any, options?: DragPreviewOptions) => {\n\t\t\tthis.clearDragPreview()\n\t\t\tthis.dragPreviewOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragPreviewRef = node\n\t\t\t} else {\n\t\t\t\tthis.dragPreviewNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragPreview()\n\t\t},\n\t})\n\tprivate handlerId: Identifier | null = null\n\n\t// The drop target may either be attached via ref or connect function\n\tprivate dragSourceRef: RefObject<any> | null = null\n\tprivate dragSourceNode: any\n\tprivate dragSourceOptionsInternal: DragSourceOptions | null = null\n\tprivate dragSourceUnsubscribe: Unsubscribe | undefined\n\n\t// The drag preview may either be attached via ref or connect function\n\tprivate dragPreviewRef: RefObject<any> | null = null\n\tprivate dragPreviewNode: any\n\tprivate dragPreviewOptionsInternal: DragPreviewOptions | null = null\n\tprivate dragPreviewUnsubscribe: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDragSource: any = null\n\tprivate lastConnectedDragSourceOptions: any = null\n\tprivate lastConnectedDragPreview: any = null\n\tprivate lastConnectedDragPreviewOptions: any = null\n\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (this.handlerId === newHandlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dragSource\n\t}\n\n\tpublic get dragSourceOptions(): DragSourceOptions | null {\n\t\treturn this.dragSourceOptionsInternal\n\t}\n\tpublic set dragSourceOptions(options: DragSourceOptions | null) {\n\t\tthis.dragSourceOptionsInternal = options\n\t}\n\n\tpublic get dragPreviewOptions(): DragPreviewOptions | null {\n\t\treturn this.dragPreviewOptionsInternal\n\t}\n\n\tpublic set dragPreviewOptions(options: DragPreviewOptions | null) {\n\t\tthis.dragPreviewOptionsInternal = options\n\t}\n\n\tpublic reconnect(): void {\n\t\tconst didChange = this.reconnectDragSource()\n\t\tthis.reconnectDragPreview(didChange)\n\t}\n\n\tprivate reconnectDragSource(): boolean {\n\t\tconst dragSource = this.dragSource\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragSourceChange() ||\n\t\t\tthis.didDragSourceOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragSource()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn didChange\n\t\t}\n\t\tif (!dragSource) {\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\treturn didChange\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\tthis.lastConnectedDragSourceOptions = this.dragSourceOptions\n\t\t\tthis.dragSourceUnsubscribe = this.backend.connectDragSource(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragSource,\n\t\t\t\tthis.dragSourceOptions,\n\t\t\t)\n\t\t}\n\t\treturn didChange\n\t}\n\n\tprivate reconnectDragPreview(forceDidChange = false): void {\n\t\tconst dragPreview = this.dragPreview\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tforceDidChange ||\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragPreviewChange() ||\n\t\t\tthis.didDragPreviewOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragPreview()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragPreview) {\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\tthis.lastConnectedDragPreviewOptions = this.dragPreviewOptions\n\t\t\tthis.dragPreviewUnsubscribe = this.backend.connectDragPreview(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragPreview,\n\t\t\t\tthis.dragPreviewOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didConnectedDragSourceChange(): boolean {\n\t\treturn this.lastConnectedDragSource !== this.dragSource\n\t}\n\n\tprivate didConnectedDragPreviewChange(): boolean {\n\t\treturn this.lastConnectedDragPreview !== this.dragPreview\n\t}\n\n\tprivate didDragSourceOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragSourceOptions,\n\t\t\tthis.dragSourceOptions,\n\t\t)\n\t}\n\n\tprivate didDragPreviewOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragPreviewOptions,\n\t\t\tthis.dragPreviewOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDragSource() {\n\t\tif (this.dragSourceUnsubscribe) {\n\t\t\tthis.dragSourceUnsubscribe()\n\t\t\tthis.dragSourceUnsubscribe = undefined\n\t\t}\n\t}\n\n\tpublic disconnectDragPreview() {\n\t\tif (this.dragPreviewUnsubscribe) {\n\t\t\tthis.dragPreviewUnsubscribe()\n\t\t\tthis.dragPreviewUnsubscribe = undefined\n\t\t\tthis.dragPreviewNode = null\n\t\t\tthis.dragPreviewRef = null\n\t\t}\n\t}\n\n\tprivate get dragSource() {\n\t\treturn (\n\t\t\tthis.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current)\n\t\t)\n\t}\n\n\tprivate get dragPreview() {\n\t\treturn (\n\t\t\tthis.dragPreviewNode ||\n\t\t\t(this.dragPreviewRef && this.dragPreviewRef.current)\n\t\t)\n\t}\n\n\tprivate clearDragSource() {\n\t\tthis.dragSourceNode = null\n\t\tthis.dragSourceRef = null\n\t}\n\n\tprivate clearDragPreview() {\n\t\tthis.dragPreviewNode = null\n\t\tthis.dragPreviewRef = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DragSourceMonitor } from '../types/index.js'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DragDropMonitor, DragSource, Identifier } from 'dnd-core'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragObjectFactory, DragSourceHookSpec } from '../types.js'\n\nexport class DragSourceImpl<O, R, P> implements DragSource {\n\tpublic constructor(\n\t\tpublic spec: DragSourceHookSpec<O, R, P>,\n\t\tprivate monitor: DragSourceMonitor<O, R>,\n\t\tprivate connector: Connector,\n\t) {}\n\n\tpublic beginDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\n\t\tlet result: O | null = null\n\t\tif (typeof spec.item === 'object') {\n\t\t\tresult = spec.item as O\n\t\t} else if (typeof spec.item === 'function') {\n\t\t\tresult = (spec.item as DragObjectFactory<O>)(monitor)\n\t\t} else {\n\t\t\tresult = {} as O\n\t\t}\n\t\treturn result ?? null\n\t}\n\n\tpublic canDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (typeof spec.canDrag === 'boolean') {\n\t\t\treturn spec.canDrag\n\t\t} else if (typeof spec.canDrag === 'function') {\n\t\t\treturn spec.canDrag(monitor)\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tpublic isDragging(globalMonitor: DragDropMonitor, target: Identifier) {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst { isDragging } = spec\n\t\treturn isDragging\n\t\t\t? isDragging(monitor)\n\t\t\t: target === globalMonitor.getSourceId()\n\t}\n\n\tpublic endDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst connector = this.connector\n\t\tconst { end } = spec\n\t\tif (end) {\n\t\t\tend(monitor.getItem(), monitor)\n\t\t}\n\t\tconnector.reconnect()\n\t}\n}\n","import type { SourceConnector } from '../../internals/index.js'\nimport { registerSource } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useDragSource } from './useDragSource.js'\nimport { useDragType } from './useDragType.js'\n\nexport function useRegisteredDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: SourceConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst handler = useDragSource(spec, monitor, connector)\n\tconst itemType = useDragType(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDragSource() {\n\t\t\tif (itemType != null) {\n\t\t\t\tconst [handlerId, unregister] = registerSource(\n\t\t\t\t\titemType,\n\t\t\t\t\thandler,\n\t\t\t\t\tmanager,\n\t\t\t\t)\n\t\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\t\treturn unregister\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\t[manager, monitor, connector, handler, itemType],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { DragSourceImpl } from './DragSourceImpl.js'\n\nexport function useDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: Connector,\n) {\n\tconst handler = useMemo(\n\t\t() => new DragSourceImpl(spec, monitor, connector),\n\t\t[monitor, connector],\n\t)\n\tuseEffect(() => {\n\t\thandler.spec = spec\n\t}, [spec])\n\treturn handler\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DragSourceHookSpec } from '../types.js'\n\nexport function useDragType(\n\tspec: DragSourceHookSpec<any, any, any>,\n): Identifier {\n\treturn useMemo(() => {\n\t\tconst result: Identifier = spec.type\n\t\tinvariant(result != null, 'spec.type must be defined')\n\t\treturn result\n\t}, [spec])\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tConnectDragPreview,\n\tConnectDragSource,\n} from '../../types/index.js'\nimport type { DragSourceHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDragPreview, useConnectDragSource } from './connectors.js'\nimport { useDragSourceConnector } from './useDragSourceConnector.js'\nimport { useDragSourceMonitor } from './useDragSourceMonitor.js'\nimport { useRegisteredDragSource } from './useRegisteredDragSource.js'\n\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrag<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDragSourceHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDragSource, ConnectDragPreview] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tinvariant(\n\t\t!(spec as any).begin,\n\t\t`useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)`,\n\t)\n\n\tconst monitor = useDragSourceMonitor<DragObject, DropResult>()\n\tconst connector = useDragSourceConnector(spec.options, spec.previewOptions)\n\tuseRegisteredDragSource(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDragSource(connector),\n\t\tuseConnectDragPreview(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DragSourceMonitorImpl } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDragSourceMonitor<O, R>(): DragSourceMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo<DragSourceMonitor<O, R>>(\n\t\t() => new DragSourceMonitorImpl(manager),\n\t\t[manager],\n\t)\n}\n","import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n","import type {\n\tDragDropManager,\n\tDragSource,\n\tDropTarget,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n\tUnsubscribe,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n","export function shallowEqual<T>(\n\tobjA: T,\n\tobjB: T,\n\tcompare?: (a: T, b: T, key?: string) => boolean | void,\n\tcompareContext?: any,\n) {\n\tlet compareResult = compare\n\t\t? compare.call(compareContext, objA, objB)\n\t\t: void 0\n\tif (compareResult !== void 0) {\n\t\treturn !!compareResult\n\t}\n\n\tif (objA === objB) {\n\t\treturn true\n\t}\n\n\tif (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n\t\treturn false\n\t}\n\n\tconst keysA = Object.keys(objA)\n\tconst keysB = Object.keys(objB)\n\n\tif (keysA.length !== keysB.length) {\n\t\treturn false\n\t}\n\n\tconst bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB)\n\n\t// Test for A's keys different from B.\n\tfor (let idx = 0; idx < keysA.length; idx++) {\n\t\tconst key = keysA[idx] as string\n\n\t\tif (!bHasOwnProperty(key)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst valueA = (objA as any)[key]\n\t\tconst valueB = (objB as any)[key]\n\n\t\tcompareResult = compare\n\t\t\t? compare.call(compareContext, valueA, valueB, key)\n\t\t\t: void 0\n\n\t\tif (\n\t\t\tcompareResult === false ||\n\t\t\t(compareResult === void 0 && valueA !== valueB)\n\t\t) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n","// cheap lodash replacements\n\n/**\n * drop-in replacement for _.get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get<T>(obj: any, path: string, defaultValue: T): T {\n\treturn path\n\t\t.split('.')\n\t\t.reduce((a, c) => (a && a[c] ? a[c] : defaultValue || null), obj) as T\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T): T[] {\n\treturn items.filter((i) => i !== item)\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isString(input: any): boolean {\n\treturn typeof input === 'string'\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isObject(input: any): boolean {\n\treturn typeof input === 'object'\n}\n\n/**\n * replacement for _.xor\n * @param itemsA\n * @param itemsB\n */\nexport function xor<T extends string | number>(itemsA: T[], itemsB: T[]): T[] {\n\tconst map = new Map<T, number>()\n\tconst insertItem = (item: T) => {\n\t\tmap.set(item, map.has(item) ? (map.get(item) as number) + 1 : 1)\n\t}\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tmap.forEach((count, key) => {\n\t\tif (count === 1) {\n\t\t\tresult.push(key)\n\t\t}\n\t})\n\treturn result\n}\n\n/**\n * replacement for _.intersection\n * @param itemsA\n * @param itemsB\n */\nexport function intersection<T>(itemsA: T[], itemsB: T[]): T[] {\n\treturn itemsA.filter((t) => itemsB.indexOf(t) > -1)\n}\n","export const INIT_COORDS = 'dnd-core/INIT_COORDS'\nexport const BEGIN_DRAG = 'dnd-core/BEGIN_DRAG'\nexport const PUBLISH_DRAG_SOURCE = 'dnd-core/PUBLISH_DRAG_SOURCE'\nexport const HOVER = 'dnd-core/HOVER'\nexport const DROP = 'dnd-core/DROP'\nexport const END_DRAG = 'dnd-core/END_DRAG'\n","import type { AnyAction } from 'redux'\n\nimport type { XYCoord } from '../../../interfaces.js'\nimport { INIT_COORDS } from '../types.js'\n\nexport function setClientOffset(\n\tclientOffset: XYCoord | null | undefined,\n\tsourceClientOffset?: XYCoord | null | undefined,\n): AnyAction {\n\treturn {\n\t\ttype: INIT_COORDS,\n\t\tpayload: {\n\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\tclientOffset: clientOffset || null,\n\t\t},\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tBeginDragOptions,\n\tBeginDragPayload,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tXYCoord,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { setClientOffset } from './local/setClientOffset.js'\nimport { BEGIN_DRAG, INIT_COORDS } from './types.js'\n\nconst ResetCoordinatesAction = {\n\ttype: INIT_COORDS,\n\tpayload: {\n\t\tclientOffset: null,\n\t\tsourceClientOffset: null,\n\t},\n}\n\nexport function createBeginDrag(manager: DragDropManager) {\n\treturn function beginDrag(\n\t\tsourceIds: Identifier[] = [],\n\t\toptions: BeginDragOptions = {\n\t\t\tpublishSource: true,\n\t\t},\n\t): Action<BeginDragPayload> | undefined {\n\t\tconst {\n\t\t\tpublishSource = true,\n\t\t\tclientOffset,\n\t\t\tgetSourceClientOffset,\n\t\t}: BeginDragOptions = options\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\n\t\t// Initialize the coordinates using the client offset\n\t\tmanager.dispatch(setClientOffset(clientOffset))\n\n\t\tverifyInvariants(sourceIds, monitor, registry)\n\n\t\t// Get the draggable source\n\t\tconst sourceId = getDraggableSource(sourceIds, monitor)\n\t\tif (sourceId == null) {\n\t\t\tmanager.dispatch(ResetCoordinatesAction)\n\t\t\treturn\n\t\t}\n\n\t\t// Get the source client offset\n\t\tlet sourceClientOffset: XYCoord | null = null\n\t\tif (clientOffset) {\n\t\t\tif (!getSourceClientOffset) {\n\t\t\t\tthrow new Error('getSourceClientOffset must be defined')\n\t\t\t}\n\t\t\tverifyGetSourceClientOffsetIsFunction(getSourceClientOffset)\n\t\t\tsourceClientOffset = getSourceClientOffset(sourceId)\n\t\t}\n\n\t\t// Initialize the full coordinates\n\t\tmanager.dispatch(setClientOffset(clientOffset, sourceClientOffset))\n\n\t\tconst source = registry.getSource(sourceId)\n\t\tconst item = source.beginDrag(monitor, sourceId)\n\t\t// If source.beginDrag returns null, this is an indicator to cancel the drag\n\t\tif (item == null) {\n\t\t\treturn undefined\n\t\t}\n\t\tverifyItemIsObject(item)\n\t\tregistry.pinSource(sourceId)\n\n\t\tconst itemType = registry.getSourceType(sourceId)\n\t\treturn {\n\t\t\ttype: BEGIN_DRAG,\n\t\t\tpayload: {\n\t\t\t\titemType,\n\t\t\t\titem,\n\t\t\t\tsourceId,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\t\tisSourcePublic: !!publishSource,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyInvariants(\n\tsourceIds: Identifier[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.')\n\tsourceIds.forEach(function (sourceId) {\n\t\tinvariant(\n\t\t\tregistry.getSource(sourceId),\n\t\t\t'Expected sourceIds to be registered.',\n\t\t)\n\t})\n}\n\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset: any) {\n\tinvariant(\n\t\ttypeof getSourceClientOffset === 'function',\n\t\t'When clientOffset is provided, getSourceClientOffset must be a function.',\n\t)\n}\n\nfunction verifyItemIsObject(item: any) {\n\tinvariant(isObject(item), 'Item must be an object.')\n}\n\nfunction getDraggableSource(sourceIds: Identifier[], monitor: DragDropMonitor) {\n\tlet sourceId = null\n\tfor (let i = sourceIds.length - 1; i >= 0; i--) {\n\t\tif (monitor.canDragSource(sourceIds[i])) {\n\t\t\tsourceId = sourceIds[i]\n\t\t\tbreak\n\t\t}\n\t}\n\treturn sourceId\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tDropPayload,\n\tHandlerRegistry,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { DROP } from './types.js'\n\nexport function createDrop(manager: DragDropManager) {\n\treturn function drop(options = {}): void {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyInvariants(monitor)\n\t\tconst targetIds = getDroppableTargets(monitor)\n\n\t\t// Multiple actions are dispatched here, which is why this doesn't return an action\n\t\ttargetIds.forEach((targetId, index) => {\n\t\t\tconst dropResult = determineDropResult(targetId, index, registry, monitor)\n\t\t\tconst action: Action<DropPayload> = {\n\t\t\t\ttype: DROP,\n\t\t\t\tpayload: {\n\t\t\t\t\tdropResult: {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t...dropResult,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\t\tmanager.dispatch(action)\n\t\t})\n\t}\n}\n\nfunction verifyInvariants(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call drop while not dragging.')\n\tinvariant(\n\t\t!monitor.didDrop(),\n\t\t'Cannot call drop twice during one drag operation.',\n\t)\n}\n\nfunction determineDropResult(\n\ttargetId: Identifier,\n\tindex: number,\n\tregistry: HandlerRegistry,\n\tmonitor: DragDropMonitor,\n) {\n\tconst target = registry.getTarget(targetId)\n\tlet dropResult = target ? target.drop(monitor, targetId) : undefined\n\tverifyDropResultType(dropResult)\n\tif (typeof dropResult === 'undefined') {\n\t\tdropResult = index === 0 ? {} : monitor.getDropResult()\n\t}\n\treturn dropResult\n}\n\nfunction verifyDropResultType(dropResult: any) {\n\tinvariant(\n\t\ttypeof dropResult === 'undefined' || isObject(dropResult),\n\t\t'Drop result must either be an object or undefined.',\n\t)\n}\n\nfunction getDroppableTargets(monitor: DragDropMonitor) {\n\tconst targetIds = monitor\n\t\t.getTargetIds()\n\t\t.filter(monitor.canDropOnTarget, monitor)\n\ttargetIds.reverse()\n\treturn targetIds\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tSentinelAction,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n","import type { Identifier } from '../interfaces.js'\n\nexport function matchesType(\n\ttargetType: Identifier | Identifier[] | null,\n\tdraggedItemType: Identifier | null,\n): boolean {\n\tif (draggedItemType === null) {\n\t\treturn targetType === null\n\t}\n\treturn Array.isArray(targetType)\n\t\t? (targetType as Identifier[]).some((t) => t === draggedItemType)\n\t\t: targetType === draggedItemType\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tHoverOptions,\n\tHoverPayload,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { matchesType } from '../../utils/matchesType.js'\nimport { HOVER } from './types.js'\n\nexport function createHover(manager: DragDropManager) {\n\treturn function hover(\n\t\ttargetIdsArg: string[],\n\t\t{ clientOffset }: HoverOptions = {},\n\t): Action<HoverPayload> {\n\t\tverifyTargetIdsIsArray(targetIdsArg)\n\t\tconst targetIds = targetIdsArg.slice(0)\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tconst draggedItemType = monitor.getItemType()\n\t\tremoveNonMatchingTargetIds(targetIds, registry, draggedItemType)\n\t\tcheckInvariants(targetIds, monitor, registry)\n\t\thoverAllTargets(targetIds, monitor, registry)\n\n\t\treturn {\n\t\t\ttype: HOVER,\n\t\t\tpayload: {\n\t\t\t\ttargetIds,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyTargetIdsIsArray(targetIdsArg: string[]) {\n\tinvariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.')\n}\n\nfunction checkInvariants(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(monitor.isDragging(), 'Cannot call hover while not dragging.')\n\tinvariant(!monitor.didDrop(), 'Cannot call hover after drop.')\n\tfor (let i = 0; i < targetIds.length; i++) {\n\t\tconst targetId = targetIds[i] as string\n\t\tinvariant(\n\t\t\ttargetIds.lastIndexOf(targetId) === i,\n\t\t\t'Expected targetIds to be unique in the passed array.',\n\t\t)\n\n\t\tconst target = registry.getTarget(targetId)\n\t\tinvariant(target, 'Expected targetIds to be registered.')\n\t}\n}\n\nfunction removeNonMatchingTargetIds(\n\ttargetIds: string[],\n\tregistry: HandlerRegistry,\n\tdraggedItemType: Identifier | null,\n) {\n\t// Remove those targetIds that don't match the targetType.  This\n\t// fixes shallow isOver which would only be non-shallow because of\n\t// non-matching targets.\n\tfor (let i = targetIds.length - 1; i >= 0; i--) {\n\t\tconst targetId = targetIds[i] as string\n\t\tconst targetType = registry.getTargetType(targetId)\n\t\tif (!matchesType(targetType, draggedItemType)) {\n\t\t\ttargetIds.splice(i, 1)\n\t\t}\n\t}\n}\n\nfunction hoverAllTargets(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\t// Finally call hover on all matching targets.\n\ttargetIds.forEach(function (targetId) {\n\t\tconst target = registry.getTarget(targetId)\n\t\ttarget.hover(monitor, targetId)\n\t})\n}\n","import type { DragDropManager, SentinelAction } from '../../interfaces.js'\nimport { PUBLISH_DRAG_SOURCE } from './types.js'\n\nexport function createPublishDragSource(manager: DragDropManager) {\n\treturn function publishDragSource(): SentinelAction | undefined {\n\t\tconst monitor = manager.getMonitor()\n\t\tif (monitor.isDragging()) {\n\t\t\treturn { type: PUBLISH_DRAG_SOURCE }\n\t\t}\n\t\treturn\n\t}\n}\n","import type { Action, Store } from 'redux'\n\nimport { createDragDropActions } from '../actions/dragDrop/index.js'\nimport type {\n\tActionCreator,\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport type { DragDropMonitorImpl } from './DragDropMonitorImpl.js'\n\nexport class DragDropManagerImpl implements DragDropManager {\n\tprivate store: Store<State>\n\tprivate monitor: DragDropMonitor\n\tprivate backend: Backend | undefined\n\tprivate isSetUp = false\n\n\tpublic constructor(store: Store<State>, monitor: DragDropMonitor) {\n\t\tthis.store = store\n\t\tthis.monitor = monitor\n\t\tstore.subscribe(this.handleRefCountChange)\n\t}\n\n\tpublic receiveBackend(backend: Backend): void {\n\t\tthis.backend = backend\n\t}\n\n\tpublic getMonitor(): DragDropMonitor {\n\t\treturn this.monitor\n\t}\n\n\tpublic getBackend(): Backend {\n\t\treturn this.backend as Backend\n\t}\n\n\tpublic getRegistry(): HandlerRegistry {\n\t\treturn (this.monitor as DragDropMonitorImpl).registry\n\t}\n\n\tpublic getActions(): DragDropActions {\n\t\t/* eslint-disable-next-line @typescript-eslint/no-this-alias */\n\t\tconst manager = this\n\t\tconst { dispatch } = this.store\n\n\t\tfunction bindActionCreator(actionCreator: ActionCreator<any>) {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\tconst action = actionCreator.apply(manager, args as any)\n\t\t\t\tif (typeof action !== 'undefined') {\n\t\t\t\t\tdispatch(action)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst actions = createDragDropActions(this)\n\n\t\treturn Object.keys(actions).reduce(\n\t\t\t(boundActions: DragDropActions, key: string) => {\n\t\t\t\tconst action: ActionCreator<any> = (actions as any)[\n\t\t\t\t\tkey\n\t\t\t\t] as ActionCreator<any>\n\t\t\t\t;(boundActions as any)[key] = bindActionCreator(action)\n\t\t\t\treturn boundActions\n\t\t\t},\n\t\t\t{} as DragDropActions,\n\t\t)\n\t}\n\n\tpublic dispatch(action: Action<any>): void {\n\t\tthis.store.dispatch(action)\n\t}\n\n\tprivate handleRefCountChange = (): void => {\n\t\tconst shouldSetUp = this.store.getState().refCount > 0\n\t\tif (this.backend) {\n\t\t\tif (shouldSetUp && !this.isSetUp) {\n\t\t\t\tthis.backend.setup()\n\t\t\t\tthis.isSetUp = true\n\t\t\t} else if (!shouldSetUp && this.isSetUp) {\n\t\t\t\tthis.backend.teardown()\n\t\t\t\tthis.isSetUp = false\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DragDropActions, DragDropManager } from '../../interfaces.js'\nimport { createBeginDrag } from './beginDrag.js'\nimport { createDrop } from './drop.js'\nimport { createEndDrag } from './endDrag.js'\nimport { createHover } from './hover.js'\nimport { createPublishDragSource } from './publishDragSource.js'\n\nexport * from './types.js'\n\nexport function createDragDropActions(\n\tmanager: DragDropManager,\n): DragDropActions {\n\treturn {\n\t\tbeginDrag: createBeginDrag(manager),\n\t\tpublishDragSource: createPublishDragSource(manager),\n\t\thover: createHover(manager),\n\t\tdrop: createDrop(manager),\n\t\tendDrag: createEndDrag(manager),\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\nimport type { State } from '../reducers/dragOffset.js'\n\n/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x + b.x,\n\t\ty: a.y + b.y,\n\t}\n}\n\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x - b.x,\n\t\ty: a.y - b.y,\n\t}\n}\n\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset, initialSourceClientOffset } = state\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(\n\t\tadd(clientOffset, initialSourceClientOffset),\n\t\tinitialClientOffset,\n\t)\n}\n\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset } = state\n\tif (!clientOffset || !initialClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(clientOffset, initialClientOffset)\n}\n","import { intersection } from './js_utils.js'\n\nexport const NONE: string[] = []\nexport const ALL: string[] = []\n// Add these flags for debug\n;(NONE as any).__IS_NONE__ = true\n;(ALL as any).__IS_ALL__ = true\n\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(\n\tdirtyIds: string[],\n\thandlerIds: string[] | undefined,\n): boolean {\n\tif (dirtyIds === NONE) {\n\t\treturn false\n\t}\n\n\tif (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n\t\treturn true\n\t}\n\n\tconst commonIds = intersection(handlerIds, dirtyIds)\n\treturn commonIds.length > 0\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport type {\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport {\n\tgetDifferenceFromInitialOffset,\n\tgetSourceClientOffset,\n} from '../utils/coords.js'\nimport { areDirty } from '../utils/dirtiness.js'\nimport { matchesType } from '../utils/matchesType.js'\n\nexport class DragDropMonitorImpl implements DragDropMonitor {\n\tprivate store: Store<State>\n\tpublic readonly registry: HandlerRegistry\n\n\tpublic constructor(store: Store<State>, registry: HandlerRegistry) {\n\t\tthis.store = store\n\t\tthis.registry = registry\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions: { handlerIds?: string[] } = {},\n\t): Unsubscribe {\n\t\tconst { handlerIds } = options\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\t\tinvariant(\n\t\t\ttypeof handlerIds === 'undefined' || Array.isArray(handlerIds),\n\t\t\t'handlerIds, when specified, must be an array of strings.',\n\t\t)\n\n\t\tlet prevStateId = this.store.getState().stateId\n\t\tconst handleChange = () => {\n\t\t\tconst state = this.store.getState()\n\t\t\tconst currentStateId = state.stateId\n\t\t\ttry {\n\t\t\t\tconst canSkipListener =\n\t\t\t\t\tcurrentStateId === prevStateId ||\n\t\t\t\t\t(currentStateId === prevStateId + 1 &&\n\t\t\t\t\t\t!areDirty(state.dirtyHandlerIds, handlerIds))\n\n\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\tlistener()\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tprevStateId = currentStateId\n\t\t\t}\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\n\t\tlet previousState = this.store.getState().dragOffset\n\t\tconst handleChange = () => {\n\t\t\tconst nextState = this.store.getState().dragOffset\n\t\t\tif (nextState === previousState) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreviousState = nextState\n\t\t\tlistener()\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic canDragSource(sourceId: string | undefined): boolean {\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.canDrag(this, sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\t\tconst target = this.registry.getTarget(targetId)\n\t\tinvariant(target, `Expected to find a valid target. targetId=${targetId}`)\n\n\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\treturn (\n\t\t\tmatchesType(targetType, draggedItemType) && target.canDrop(this, targetId)\n\t\t)\n\t}\n\n\tpublic isDragging(): boolean {\n\t\treturn Boolean(this.getItemType())\n\t}\n\n\tpublic isDraggingSource(sourceId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId, true)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst sourceType = this.registry.getSourceType(sourceId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (sourceType !== draggedItemType) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.isDragging(this, sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: string | undefined,\n\t\toptions = { shallow: false },\n\t): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { shallow } = options\n\t\tif (!this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (draggedItemType && !matchesType(targetType, draggedItemType)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetIds = this.getTargetIds()\n\t\tif (!targetIds.length) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst index = targetIds.indexOf(targetId)\n\t\tif (shallow) {\n\t\t\treturn index === targetIds.length - 1\n\t\t} else {\n\t\t\treturn index > -1\n\t\t}\n\t}\n\n\tpublic getItemType(): Identifier {\n\t\treturn this.store.getState().dragOperation.itemType as Identifier\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.store.getState().dragOperation.item\n\t}\n\n\tpublic getSourceId(): string | null {\n\t\treturn this.store.getState().dragOperation.sourceId\n\t}\n\n\tpublic getTargetIds(): string[] {\n\t\treturn this.store.getState().dragOperation.targetIds\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.store.getState().dragOperation.dropResult\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.store.getState().dragOperation.didDrop\n\t}\n\n\tpublic isSourcePublic(): boolean {\n\t\treturn Boolean(this.store.getState().dragOperation.isSourcePublic)\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialClientOffset\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialSourceClientOffset\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.clientOffset\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn getSourceClientOffset(this.store.getState().dragOffset)\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn getDifferenceFromInitialOffset(this.store.getState().dragOffset)\n\t}\n}\n","// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nconst scope = typeof global !== 'undefined' ? global : self\nconst BrowserMutationObserver =\n\t(scope as any).MutationObserver || (scope as any).WebKitMutationObserver\n\nexport function makeRequestCallFromTimer(callback: () => void) {\n\treturn function requestCall() {\n\t\t// We dispatch a timeout with a specified delay of 0 for engines that\n\t\t// can reliably accommodate that request. This will usually be snapped\n\t\t// to a 4 milisecond delay, but once we're flushing, there's no delay\n\t\t// between events.\n\t\tconst timeoutHandle = setTimeout(handleTimer, 0)\n\t\t// However, since this timer gets frequently dropped in Firefox\n\t\t// workers, we enlist an interval handle that will try to fire\n\t\t// an event 20 times per second until it succeeds.\n\t\tconst intervalHandle = setInterval(handleTimer, 50)\n\n\t\tfunction handleTimer() {\n\t\t\t// Whichever timer succeeds will cancel both timers and\n\t\t\t// execute the callback.\n\t\t\tclearTimeout(timeoutHandle)\n\t\t\tclearInterval(intervalHandle)\n\t\t\tcallback()\n\t\t}\n\t}\n}\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nexport function makeRequestCallFromMutationObserver(callback: () => void) {\n\tlet toggle = 1\n\tconst observer = new BrowserMutationObserver(callback)\n\tconst node = document.createTextNode('')\n\tobserver.observe(node, { characterData: true })\n\treturn function requestCall() {\n\t\ttoggle = -toggle\n\t\t;(node as any).data = toggle\n\t}\n}\n\nexport const makeRequestCall =\n\ttypeof BrowserMutationObserver === 'function'\n\t\t? // MutationObservers are desirable because they have high priority and work\n\t\t  // reliably everywhere they are implemented.\n\t\t  // They are implemented in all modern browsers.\n\t\t  //\n\t\t  // - Android 4-4.3\n\t\t  // - Chrome 26-34\n\t\t  // - Firefox 14-29\n\t\t  // - Internet Explorer 11\n\t\t  // - iPad Safari 6-7.1\n\t\t  // - iPhone Safari 7-7.1\n\t\t  // - Safari 6-7\n\t\t  makeRequestCallFromMutationObserver\n\t\t: // MessageChannels are desirable because they give direct access to the HTML\n\t\t  // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t\t  // 11-12, and in web workers in many engines.\n\t\t  // Although message channels yield to any queued rendering and IO tasks, they\n\t\t  // would be better than imposing the 4ms delay of timers.\n\t\t  // However, they do not work reliably in Internet Explorer or Safari.\n\n\t\t  // Internet Explorer 10 is the only browser that has setImmediate but does\n\t\t  // not have MutationObservers.\n\t\t  // Although setImmediate yields to the browser's renderer, it would be\n\t\t  // preferrable to falling back to setTimeout since it does not have\n\t\t  // the minimum 4ms penalty.\n\t\t  // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t\t  // Desktop to a lesser extent) that renders both setImmediate and\n\t\t  // MessageChannel useless for the purposes of ASAP.\n\t\t  // https://github.com/kriskowal/q/issues/396\n\n\t\t  // Timers are implemented universally.\n\t\t  // We fall back to timers in workers in most engines, and in foreground\n\t\t  // contexts in the following browsers.\n\t\t  // However, note that even this simple case requires nuances to operate in a\n\t\t  // broad spectrum of browsers.\n\t\t  //\n\t\t  // - Firefox 3-13\n\t\t  // - Internet Explorer 6-9\n\t\t  // - iPad Safari 4.3\n\t\t  // - Lynx 2.8.7\n\t\t  makeRequestCallFromTimer\n","// We wrap tasks with recyclable task objects.  A task object implements\n\nimport type { Task, TaskFn } from 'types'\n\n// `call`, just like a function.\nexport class RawTask implements Task {\n\tpublic task: TaskFn | null = null\n\n\tpublic constructor(\n\t\tprivate onError: (err: any) => void,\n\t\tprivate release: (t: RawTask) => void,\n\t) {}\n\n\tpublic call() {\n\t\ttry {\n\t\t\tthis.task && this.task()\n\t\t} catch (error) {\n\t\t\tthis.onError(error)\n\t\t} finally {\n\t\t\tthis.task = null\n\t\t\tthis.release(this)\n\t\t}\n\t}\n}\n","import { AsapQueue } from './AsapQueue.js'\nimport { TaskFactory } from './TaskFactory.js'\nimport type { TaskFn } from './types.js'\n\nconst asapQueue = new AsapQueue()\nconst taskFactory = new TaskFactory(asapQueue.registerPendingError)\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nexport function asap(task: TaskFn) {\n\tasapQueue.enqueueTask(taskFactory.create(task))\n}\n","/* eslint-disable no-restricted-globals, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unused-vars, @typescript-eslint/no-non-null-assertion */\nimport { makeRequestCall, makeRequestCallFromTimer } from './makeRequestCall.js'\nimport type { Task } from './types.js'\n\nexport class AsapQueue {\n\tprivate queue: Task[] = []\n\t// We queue errors to ensure they are thrown in right order (FIFO).\n\t// Array-as-queue is good enough here, since we are just dealing with exceptions.\n\tprivate pendingErrors: any[] = []\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\t// @ts-ignore\n\tprivate flushing = false\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tprivate requestFlush: () => void\n\n\tprivate requestErrorThrow: () => void\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tprivate index = 0\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tprivate capacity = 1024\n\n\tpublic constructor() {\n\t\t// `requestFlush` requests that the high priority event queue be flushed as\n\t\t// soon as possible.\n\t\t// This is useful to prevent an error thrown in a task from stalling the event\n\t\t// queue if the exception handled by Node.js’s\n\t\t// `process.on(\"uncaughtException\")` or by a domain.\n\n\t\t// `requestFlush` is implemented using a strategy based on data collected from\n\t\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\tthis.requestFlush = makeRequestCall(this.flush)\n\t\tthis.requestErrorThrow = makeRequestCallFromTimer(() => {\n\t\t\t// Throw first error\n\t\t\tif (this.pendingErrors.length) {\n\t\t\t\tthrow this.pendingErrors.shift()\n\t\t\t}\n\t\t})\n\t}\n\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tpublic enqueueTask(task: Task): void {\n\t\tconst { queue: q, requestFlush } = this\n\t\tif (!q.length) {\n\t\t\trequestFlush()\n\t\t\tthis.flushing = true\n\t\t}\n\t\t// Equivalent to push, but avoids a function call.\n\t\tq[q.length] = task\n\t}\n\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tprivate flush = () => {\n\t\tconst { queue: q } = this\n\t\twhile (this.index < q.length) {\n\t\t\tconst currentIndex = this.index\n\t\t\t// Advance the index before calling the task. This ensures that we will\n\t\t\t// begin flushing on the next task the task throws an error.\n\t\t\tthis.index++\n\t\t\tq[currentIndex]!.call()\n\t\t\t// Prevent leaking memory for long chains of recursive calls to `asap`.\n\t\t\t// If we call `asap` within tasks scheduled by `asap`, the queue will\n\t\t\t// grow, but to avoid an O(n) walk for every task we execute, we don't\n\t\t\t// shift tasks off the queue after they have been executed.\n\t\t\t// Instead, we periodically shift 1024 tasks off the queue.\n\t\t\tif (this.index > this.capacity) {\n\t\t\t\t// Manually shift all values starting at the index back to the\n\t\t\t\t// beginning of the queue.\n\t\t\t\tfor (\n\t\t\t\t\tlet scan = 0, newLength = q.length - this.index;\n\t\t\t\t\tscan < newLength;\n\t\t\t\t\tscan++\n\t\t\t\t) {\n\t\t\t\t\tq[scan] = q[scan + this.index]!\n\t\t\t\t}\n\t\t\t\tq.length -= this.index\n\t\t\t\tthis.index = 0\n\t\t\t}\n\t\t}\n\t\tq.length = 0\n\t\tthis.index = 0\n\t\tthis.flushing = false\n\t}\n\n\t// In a web browser, exceptions are not fatal. However, to avoid\n\t// slowing down the queue of pending tasks, we rethrow the error in a\n\t// lower priority turn.\n\tpublic registerPendingError = (err: any) => {\n\t\tthis.pendingErrors.push(err)\n\t\tthis.requestErrorThrow()\n\t}\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// // its existence.\n// rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","import { RawTask } from './RawTask.js'\nimport type { Task } from './types.js'\n\nexport class TaskFactory {\n\tprivate freeTasks: RawTask[] = []\n\n\tpublic constructor(private onError: (err: any) => void) {}\n\n\tpublic create(task: () => void): Task {\n\t\tconst tasks = this.freeTasks\n\t\tconst t = tasks.length\n\t\t\t? (tasks.pop() as RawTask)\n\t\t\t: new RawTask(this.onError, (t) => (tasks[tasks.length] = t))\n\t\tt.task = task\n\t\treturn t\n\t}\n}\n","import type { Action, SourceIdPayload, TargetIdPayload } from '../interfaces.js'\n\nexport const ADD_SOURCE = 'dnd-core/ADD_SOURCE'\nexport const ADD_TARGET = 'dnd-core/ADD_TARGET'\nexport const REMOVE_SOURCE = 'dnd-core/REMOVE_SOURCE'\nexport const REMOVE_TARGET = 'dnd-core/REMOVE_TARGET'\n\nexport function addSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: ADD_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function addTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: ADD_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n\nexport function removeSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: REMOVE_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function removeTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: REMOVE_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type { DragSource, DropTarget, Identifier } from './interfaces.js'\n\nexport function validateSourceContract(source: DragSource): void {\n\tinvariant(\n\t\ttypeof source.canDrag === 'function',\n\t\t'Expected canDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.beginDrag === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.endDrag === 'function',\n\t\t'Expected endDrag to be a function.',\n\t)\n}\n\nexport function validateTargetContract(target: DropTarget): void {\n\tinvariant(\n\t\ttypeof target.canDrop === 'function',\n\t\t'Expected canDrop to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.hover === 'function',\n\t\t'Expected hover to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.drop === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n}\n\nexport function validateType(\n\ttype: Identifier | Identifier[],\n\tallowArray?: boolean,\n): void {\n\tif (allowArray && Array.isArray(type)) {\n\t\ttype.forEach((t) => validateType(t, false))\n\t\treturn\n\t}\n\n\tinvariant(\n\t\ttypeof type === 'string' || typeof type === 'symbol',\n\t\tallowArray\n\t\t\t? 'Type can only be a string, a symbol, or an array of either.'\n\t\t\t: 'Type can only be a string or a symbol.',\n\t)\n}\n","export type Identifier = string | symbol\nexport type SourceType = Identifier\nexport type TargetType = Identifier | Identifier[]\nexport type Unsubscribe = () => void\nexport type Listener = () => void\n\nexport interface XYCoord {\n\tx: number\n\ty: number\n}\n\nexport enum HandlerRole {\n\tSOURCE = 'SOURCE',\n\tTARGET = 'TARGET',\n}\n\nexport interface Backend {\n\tsetup(): void\n\tteardown(): void\n\tconnectDragSource(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDragPreview(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDropTarget(targetId: any, node?: any, options?: any): Unsubscribe\n\tprofile(): Record<string, number>\n}\n\nexport interface DragDropMonitor {\n\tsubscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: {\n\t\t\thandlerIds?: Identifier[]\n\t\t},\n\t): Unsubscribe\n\tsubscribeToOffsetChange(listener: Listener): Unsubscribe\n\tcanDragSource(sourceId: Identifier | undefined): boolean\n\tcanDropOnTarget(targetId: Identifier | undefined): boolean\n\n\t/**\n\t * Returns true if a drag operation is in progress, and either the owner initiated the drag, or its isDragging()\n\t * is defined and returns true.\n\t */\n\tisDragging(): boolean\n\tisDraggingSource(sourceId: Identifier | undefined): boolean\n\tisOverTarget(\n\t\ttargetId: Identifier | undefined,\n\t\toptions?: {\n\t\t\tshallow?: boolean\n\t\t},\n\t): boolean\n\n\t/**\n\t * Returns a string or a symbol identifying the type of the current dragged item. Returns null if no item is being dragged.\n\t */\n\tgetItemType(): Identifier | null\n\n\t/**\n\t * Returns a plain object representing the currently dragged item. Every drag source must specify it by returning an object\n\t * from its beginDrag() method. Returns null if no item is being dragged.\n\t */\n\tgetItem(): any\n\tgetSourceId(): Identifier | null\n\tgetTargetIds(): Identifier[]\n\t/**\n\t * Returns a plain object representing the last recorded drop result. The drop targets may optionally specify it by returning an\n\t * object from their drop() methods. When a chain of drop() is dispatched for the nested targets, bottom up, any parent that\n\t * explicitly returns its own result from drop() overrides the child drop result previously set by the child. Returns null if\n\t * called outside endDrag().\n\t */\n\tgetDropResult(): any\n\t/**\n\t * Returns true if some drop target has handled the drop event, false otherwise. Even if a target did not return a drop result,\n\t * didDrop() returns true. Use it inside endDrag() to test whether any drop target has handled the drop. Returns false if called\n\t * outside endDrag().\n\t */\n\tdidDrop(): boolean\n\tisSourcePublic(): boolean | null\n\t/**\n\t * Returns the { x, y } client offset of the pointer at the time when the current drag operation has started.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetInitialClientOffset(): XYCoord | null\n\t/**\n\t * Returns the { x, y } client offset of the drag source component's root DOM node at the time when the current drag\n\t * operation has started. Returns null if no item is being dragged.\n\t */\n\tgetInitialSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the last recorded { x, y } client offset of the pointer while a drag operation is in progress.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the projected { x, y } client offset of the drag source component's root DOM node, based on its position at the time\n\t * when the current drag operation has started, and the movement difference. Returns null if no item is being dragged.\n\t */\n\tgetSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the { x, y } difference between the last recorded client offset of the pointer and the client offset when the current\n\t * drag operation has started. Returns null if no item is being dragged.\n\t */\n\tgetDifferenceFromInitialOffset(): XYCoord | null\n}\n\nexport interface HandlerRegistry {\n\taddSource(type: SourceType, source: DragSource): Identifier\n\taddTarget(type: TargetType, target: DropTarget): Identifier\n\tcontainsHandler(handler: DragSource | DropTarget): boolean\n\tgetSource(sourceId: Identifier, includePinned?: boolean): DragSource\n\tgetSourceType(sourceId: Identifier): SourceType\n\tgetTargetType(targetId: Identifier): TargetType\n\tgetTarget(targetId: Identifier): DropTarget\n\tisSourceId(handlerId: Identifier): boolean\n\tisTargetId(handlerId: Identifier): boolean\n\tremoveSource(sourceId: Identifier): void\n\tremoveTarget(targetId: Identifier): void\n\tpinSource(sourceId: Identifier): void\n\tunpinSource(): void\n}\n\nexport interface Action<Payload> {\n\ttype: Identifier\n\tpayload: Payload\n}\nexport interface SentinelAction {\n\ttype: Identifier\n}\n\nexport type ActionCreator<Payload> = (args: any[]) => Action<Payload>\n\nexport interface BeginDragOptions {\n\tpublishSource?: boolean\n\tclientOffset?: XYCoord\n\tgetSourceClientOffset?: (sourceId: Identifier | undefined) => XYCoord\n}\n\nexport interface InitCoordsPayload {\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n}\n\nexport interface BeginDragPayload {\n\titemType: Identifier\n\titem: any\n\tsourceId: Identifier\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n\tisSourcePublic: boolean\n}\n\nexport interface HoverPayload {\n\ttargetIds: Identifier[]\n\tclientOffset: XYCoord | null\n}\n\nexport interface HoverOptions {\n\tclientOffset?: XYCoord\n}\n\nexport interface DropPayload {\n\tdropResult: any\n}\n\nexport interface TargetIdPayload {\n\ttargetId: Identifier\n}\n\nexport interface SourceIdPayload {\n\tsourceId: Identifier\n}\n\nexport interface DragDropActions {\n\tbeginDrag(\n\t\tsourceIds?: Identifier[],\n\t\toptions?: any,\n\t): Action<BeginDragPayload> | undefined\n\tpublishDragSource(): SentinelAction | undefined\n\thover(targetIds: Identifier[], options?: any): Action<HoverPayload>\n\tdrop(options?: any): void\n\tendDrag(): SentinelAction\n}\n\nexport interface DragDropManager {\n\tgetMonitor(): DragDropMonitor\n\tgetBackend(): Backend\n\tgetRegistry(): HandlerRegistry\n\tgetActions(): DragDropActions\n\tdispatch(action: any): void\n}\n\nexport type BackendFactory = (\n\tmanager: DragDropManager,\n\tglobalContext?: any,\n\tconfiguration?: any,\n) => Backend\n\nexport interface DragSource {\n\tbeginDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tendDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tcanDrag(monitor: DragDropMonitor, targetId: Identifier): boolean\n\tisDragging(monitor: DragDropMonitor, targetId: Identifier): boolean\n}\n\nexport interface DropTarget {\n\tcanDrop(monitor: DragDropMonitor, targetId: Identifier): boolean\n\thover(monitor: DragDropMonitor, targetId: Identifier): void\n\tdrop(monitor: DragDropMonitor, targetId: Identifier): any\n}\n","let nextUniqueId = 0\n\nexport function getNextUniqueId(): number {\n\treturn nextUniqueId++\n}\n","import { asap } from '@react-dnd/asap'\nimport { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport {\n\taddSource,\n\taddTarget,\n\tremoveSource,\n\tremoveTarget,\n} from '../actions/registry.js'\nimport {\n\tvalidateSourceContract,\n\tvalidateTargetContract,\n\tvalidateType,\n} from '../contracts.js'\nimport type {\n\tDragSource,\n\tDropTarget,\n\tHandlerRegistry,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n} from '../interfaces.js'\nimport { HandlerRole } from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport { getNextUniqueId } from '../utils/getNextUniqueId.js'\n\nfunction getNextHandlerId(role: HandlerRole): string {\n\tconst id = getNextUniqueId().toString()\n\tswitch (role) {\n\t\tcase HandlerRole.SOURCE:\n\t\t\treturn `S${id}`\n\t\tcase HandlerRole.TARGET:\n\t\t\treturn `T${id}`\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown Handler Role: ${role}`)\n\t}\n}\n\nfunction parseRoleFromHandlerId(handlerId: string) {\n\tswitch (handlerId[0]) {\n\t\tcase 'S':\n\t\t\treturn HandlerRole.SOURCE\n\t\tcase 'T':\n\t\t\treturn HandlerRole.TARGET\n\t\tdefault:\n\t\t\tthrow new Error(`Cannot parse handler ID: ${handlerId}`)\n\t}\n}\n\nfunction mapContainsValue<T>(map: Map<string, T>, searchValue: T) {\n\tconst entries = map.entries()\n\tlet isDone = false\n\tdo {\n\t\tconst {\n\t\t\tdone,\n\t\t\tvalue: [, value],\n\t\t} = entries.next()\n\t\tif (value === searchValue) {\n\t\t\treturn true\n\t\t}\n\t\tisDone = !!done\n\t} while (!isDone)\n\treturn false\n}\n\nexport class HandlerRegistryImpl implements HandlerRegistry {\n\tprivate types: Map<string, SourceType | TargetType> = new Map()\n\tprivate dragSources: Map<string, DragSource> = new Map()\n\tprivate dropTargets: Map<string, DropTarget> = new Map()\n\tprivate pinnedSourceId: string | null = null\n\tprivate pinnedSource: any = null\n\tprivate store: Store<State>\n\n\tpublic constructor(store: Store<State>) {\n\t\tthis.store = store\n\t}\n\n\tpublic addSource(type: SourceType, source: DragSource): string {\n\t\tvalidateType(type)\n\t\tvalidateSourceContract(source)\n\n\t\tconst sourceId = this.addHandler(HandlerRole.SOURCE, type, source)\n\t\tthis.store.dispatch(addSource(sourceId))\n\t\treturn sourceId\n\t}\n\n\tpublic addTarget(type: TargetType, target: DropTarget): string {\n\t\tvalidateType(type, true)\n\t\tvalidateTargetContract(target)\n\n\t\tconst targetId = this.addHandler(HandlerRole.TARGET, type, target)\n\t\tthis.store.dispatch(addTarget(targetId))\n\t\treturn targetId\n\t}\n\n\tpublic containsHandler(handler: DragSource | DropTarget): boolean {\n\t\treturn (\n\t\t\tmapContainsValue(this.dragSources, handler) ||\n\t\t\tmapContainsValue(this.dropTargets, handler)\n\t\t)\n\t}\n\n\tpublic getSource(sourceId: string, includePinned = false): DragSource {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\tconst isPinned = includePinned && sourceId === this.pinnedSourceId\n\t\tconst source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId)\n\t\treturn source\n\t}\n\n\tpublic getTarget(targetId: string): DropTarget {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.dropTargets.get(targetId) as DropTarget\n\t}\n\n\tpublic getSourceType(sourceId: string): Identifier {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\treturn this.types.get(sourceId) as Identifier\n\t}\n\n\tpublic getTargetType(targetId: string): Identifier | Identifier[] {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.types.get(targetId) as Identifier | Identifier[]\n\t}\n\n\tpublic isSourceId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.SOURCE\n\t}\n\n\tpublic isTargetId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.TARGET\n\t}\n\n\tpublic removeSource(sourceId: string): void {\n\t\tinvariant(this.getSource(sourceId), 'Expected an existing source.')\n\t\tthis.store.dispatch(removeSource(sourceId))\n\t\tasap(() => {\n\t\t\tthis.dragSources.delete(sourceId)\n\t\t\tthis.types.delete(sourceId)\n\t\t})\n\t}\n\n\tpublic removeTarget(targetId: string): void {\n\t\tinvariant(this.getTarget(targetId), 'Expected an existing target.')\n\t\tthis.store.dispatch(removeTarget(targetId))\n\t\tthis.dropTargets.delete(targetId)\n\t\tthis.types.delete(targetId)\n\t}\n\n\tpublic pinSource(sourceId: string): void {\n\t\tconst source = this.getSource(sourceId)\n\t\tinvariant(source, 'Expected an existing source.')\n\n\t\tthis.pinnedSourceId = sourceId\n\t\tthis.pinnedSource = source\n\t}\n\n\tpublic unpinSource(): void {\n\t\tinvariant(this.pinnedSource, 'No source is pinned at the time.')\n\n\t\tthis.pinnedSourceId = null\n\t\tthis.pinnedSource = null\n\t}\n\n\tprivate addHandler(\n\t\trole: HandlerRole,\n\t\ttype: SourceType | TargetType,\n\t\thandler: DragSource | DropTarget,\n\t): string {\n\t\tconst id = getNextHandlerId(role)\n\t\tthis.types.set(id, type)\n\t\tif (role === HandlerRole.SOURCE) {\n\t\t\tthis.dragSources.set(id, handler as DragSource)\n\t\t} else if (role === HandlerRole.TARGET) {\n\t\t\tthis.dropTargets.set(id, handler as DropTarget)\n\t\t}\n\t\treturn id\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\n\nexport type EqualityCheck<T> = (a: T, b: T) => boolean\nexport const strictEquality = <T>(a: T, b: T): boolean => a === b\n\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nexport function areCoordsEqual(\n\toffsetA: XYCoord | null | undefined,\n\toffsetB: XYCoord | null | undefined,\n): boolean {\n\tif (!offsetA && !offsetB) {\n\t\treturn true\n\t} else if (!offsetA || !offsetB) {\n\t\treturn false\n\t} else {\n\t\treturn offsetA.x === offsetB.x && offsetA.y === offsetB.y\n\t}\n}\n\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nexport function areArraysEqual<T>(\n\ta: T[],\n\tb: T[],\n\tisEqual: EqualityCheck<T> = strictEquality,\n): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false\n\t}\n\tfor (let i = 0; i < a.length; ++i) {\n\t\tif (!isEqual(a[i] as T, b[i] as T)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\nimport { ALL, NONE } from '../utils/dirtiness.js'\nimport { areArraysEqual } from '../utils/equality.js'\nimport { xor } from '../utils/js_utils.js'\n\nexport type State = string[]\n\nexport interface DirtyHandlerIdPayload {\n\ttargetIds: string[]\n\tprevTargetIds: string[]\n}\n\nexport function reduce(\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t_state: State = NONE,\n\taction: Action<DirtyHandlerIdPayload>,\n): State {\n\tswitch (action.type) {\n\t\tcase HOVER:\n\t\t\tbreak\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\tcase REMOVE_TARGET:\n\t\tcase REMOVE_SOURCE:\n\t\t\treturn NONE\n\t\tcase BEGIN_DRAG:\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\tdefault:\n\t\t\treturn ALL\n\t}\n\n\tconst { targetIds = [], prevTargetIds = [] } = action.payload\n\tconst result = xor(targetIds, prevTargetIds)\n\tconst didChange =\n\t\tresult.length > 0 || !areArraysEqual(targetIds, prevTargetIds)\n\n\tif (!didChange) {\n\t\treturn NONE\n\t}\n\n\t// Check the target ids at the innermost position. If they are valid, add them\n\t// to the result\n\tconst prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1]\n\tconst innermostTargetId = targetIds[targetIds.length - 1]\n\tif (prevInnermostTargetId !== innermostTargetId) {\n\t\tif (prevInnermostTargetId) {\n\t\t\tresult.push(prevInnermostTargetId)\n\t\t}\n\t\tif (innermostTargetId) {\n\t\t\tresult.push(innermostTargetId)\n\t\t}\n\t}\n\n\treturn result\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tINIT_COORDS,\n} from '../actions/dragDrop/index.js'\nimport type { Action, XYCoord } from '../interfaces.js'\nimport { areCoordsEqual } from '../utils/equality.js'\n\nexport interface State {\n\tinitialSourceClientOffset: XYCoord | null\n\tinitialClientOffset: XYCoord | null\n\tclientOffset: XYCoord | null\n}\n\nconst initialState: State = {\n\tinitialSourceClientOffset: null,\n\tinitialClientOffset: null,\n\tclientOffset: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\tsourceClientOffset: XYCoord\n\t\tclientOffset: XYCoord\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase INIT_COORDS:\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\tinitialSourceClientOffset: payload.sourceClientOffset,\n\t\t\t\tinitialClientOffset: payload.clientOffset,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\tif (areCoordsEqual(state.clientOffset, payload.clientOffset)) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\t\treturn initialState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport { REMOVE_TARGET } from '../actions/registry.js'\nimport type { Action, Identifier } from '../interfaces.js'\nimport { without } from '../utils/js_utils.js'\n\nexport interface State {\n\titemType: Identifier | Identifier[] | null\n\titem: any\n\tsourceId: string | null\n\ttargetIds: string[]\n\tdropResult: any\n\tdidDrop: boolean\n\tisSourcePublic: boolean | null\n}\n\nconst initialState: State = {\n\titemType: null,\n\titem: null,\n\tsourceId: null,\n\ttargetIds: [],\n\tdropResult: null,\n\tdidDrop: false,\n\tisSourcePublic: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\titemType: Identifier | Identifier[]\n\t\titem: any\n\t\tsourceId: string\n\t\ttargetId: string\n\t\ttargetIds: string[]\n\t\tisSourcePublic: boolean\n\t\tdropResult: any\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: payload.itemType,\n\t\t\t\titem: payload.item,\n\t\t\t\tsourceId: payload.sourceId,\n\t\t\t\tisSourcePublic: payload.isSourcePublic,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t}\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSourcePublic: true,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: payload.targetIds,\n\t\t\t}\n\t\tcase REMOVE_TARGET:\n\t\t\tif (state.targetIds.indexOf(payload.targetId) === -1) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: without(state.targetIds, payload.targetId),\n\t\t\t}\n\t\tcase DROP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdropResult: payload.dropResult,\n\t\t\t\tdidDrop: true,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tcase END_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: null,\n\t\t\t\titem: null,\n\t\t\t\tsourceId: null,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t\tisSourcePublic: null,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\n\nexport type State = number\n\nexport function reduce(state: State = 0, action: Action<any>): State {\n\tswitch (action.type) {\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\t\treturn state + 1\n\t\tcase REMOVE_SOURCE:\n\t\tcase REMOVE_TARGET:\n\t\t\treturn state - 1\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","export type State = number\n\nexport function reduce(state: State = 0): State {\n\treturn state + 1\n}\n","import type { Action } from '../interfaces.js'\nimport { get } from '../utils/js_utils.js'\nimport type { State as DirtyHandlerIdsState } from './dirtyHandlerIds.js'\nimport { reduce as dirtyHandlerIds } from './dirtyHandlerIds.js'\nimport type { State as DragOffsetState } from './dragOffset.js'\nimport { reduce as dragOffset } from './dragOffset.js'\nimport type { State as DragOperationState } from './dragOperation.js'\nimport { reduce as dragOperation } from './dragOperation.js'\nimport type { State as RefCountState } from './refCount.js'\nimport { reduce as refCount } from './refCount.js'\nimport type { State as StateIdState } from './stateId.js'\nimport { reduce as stateId } from './stateId.js'\n\nexport interface State {\n\tdirtyHandlerIds: DirtyHandlerIdsState\n\tdragOffset: DragOffsetState\n\trefCount: RefCountState\n\tdragOperation: DragOperationState\n\tstateId: StateIdState\n}\n\nexport function reduce(state: State = {} as State, action: Action<any>): State {\n\treturn {\n\t\tdirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {\n\t\t\ttype: action.type,\n\t\t\tpayload: {\n\t\t\t\t...action.payload,\n\t\t\t\tprevTargetIds: get<string[]>(state, 'dragOperation.targetIds', []),\n\t\t\t},\n\t\t}),\n\t\tdragOffset: dragOffset(state.dragOffset, action),\n\t\trefCount: refCount(state.refCount, action),\n\t\tdragOperation: dragOperation(state.dragOperation, action),\n\t\tstateId: stateId(state.stateId),\n\t}\n}\n","import type { Store } from 'redux'\nimport { createStore } from 'redux'\n\nimport { DragDropManagerImpl } from './classes/DragDropManagerImpl.js'\nimport { DragDropMonitorImpl } from './classes/DragDropMonitorImpl.js'\nimport { HandlerRegistryImpl } from './classes/HandlerRegistryImpl.js'\nimport type { BackendFactory, DragDropManager } from './interfaces.js'\nimport type { State } from './reducers/index.js'\nimport { reduce } from './reducers/index.js'\n\nexport function createDragDropManager(\n\tbackendFactory: BackendFactory,\n\tglobalContext: unknown = undefined,\n\tbackendOptions: unknown = {},\n\tdebugMode = false,\n): DragDropManager {\n\tconst store = makeStoreInstance(debugMode)\n\tconst monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store))\n\tconst manager = new DragDropManagerImpl(store, monitor)\n\tconst backend = backendFactory(manager, globalContext, backendOptions)\n\tmanager.receiveBackend(backend)\n\treturn manager\n}\n\nfunction makeStoreInstance(debugMode: boolean): Store<State> {\n\t// TODO: if we ever make a react-native version of this,\n\t// we'll need to consider how to pull off dev-tooling\n\tconst reduxDevTools =\n\t\ttypeof window !== 'undefined' &&\n\t\t(window as any).__REDUX_DEVTOOLS_EXTENSION__\n\treturn createStore(\n\t\treduce,\n\t\tdebugMode &&\n\t\t\treduxDevTools &&\n\t\t\treduxDevTools({\n\t\t\t\tname: 'dnd-core',\n\t\t\t\tinstanceId: 'dnd-core',\n\t\t\t}),\n\t)\n}\n","import type { BackendFactory, DragDropManager } from 'dnd-core'\nimport { createDragDropManager } from 'dnd-core'\nimport type { FC, ReactNode } from 'react'\nimport { memo, useEffect } from 'react'\n\nimport { DndContext } from './DndContext.js'\n\nexport type DndProviderProps<BackendContext, BackendOptions> =\n\t| {\n\t\t\tchildren?: ReactNode\n\t\t\tmanager: DragDropManager\n\t  }\n\t| {\n\t\t\tbackend: BackendFactory\n\t\t\tchildren?: ReactNode\n\t\t\tcontext?: BackendContext\n\t\t\toptions?: BackendOptions\n\t\t\tdebugMode?: boolean\n\t  }\n\nlet refCount = 0\nconst INSTANCE_SYM = Symbol.for('__REACT_DND_CONTEXT_INSTANCE__')\n\n/**\n * A React component that provides the React-DnD context\n */\nexport const DndProvider: FC<DndProviderProps<unknown, unknown>> = memo(\n\tfunction DndProvider({ children, ...props }) {\n\t\tconst [manager, isGlobalInstance] = getDndContextValue(props) // memoized from props\n\t\t/**\n\t\t * If the global context was used to store the DND context\n\t\t * then where theres no more references to it we should\n\t\t * clean it up to avoid memory leaks\n\t\t */\n\t\tuseEffect(() => {\n\t\t\tif (isGlobalInstance) {\n\t\t\t\tconst context = getGlobalContext()\n\t\t\t\t++refCount\n\n\t\t\t\treturn () => {\n\t\t\t\t\tif (--refCount === 0) {\n\t\t\t\t\t\tcontext[INSTANCE_SYM] = null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}, [])\n\n\t\treturn <DndContext.Provider value={manager}>{children}</DndContext.Provider>\n\t},\n)\n\nfunction getDndContextValue(props: DndProviderProps<unknown, unknown>) {\n\tif ('manager' in props) {\n\t\tconst manager = { dragDropManager: props.manager }\n\t\treturn [manager, false]\n\t}\n\n\tconst manager = createSingletonDndContext(\n\t\tprops.backend,\n\t\tprops.context,\n\t\tprops.options,\n\t\tprops.debugMode,\n\t)\n\tconst isGlobalInstance = !props.context\n\n\treturn [manager, isGlobalInstance]\n}\n\nfunction createSingletonDndContext<BackendContext, BackendOptions>(\n\tbackend: BackendFactory,\n\tcontext: BackendContext = getGlobalContext(),\n\toptions: BackendOptions,\n\tdebugMode?: boolean,\n) {\n\tconst ctx = context as any\n\tif (!ctx[INSTANCE_SYM]) {\n\t\tctx[INSTANCE_SYM] = {\n\t\t\tdragDropManager: createDragDropManager(\n\t\t\t\tbackend,\n\t\t\t\tcontext,\n\t\t\t\toptions,\n\t\t\t\tdebugMode,\n\t\t\t),\n\t\t}\n\t}\n\treturn ctx[INSTANCE_SYM]\n}\n\ndeclare const global: any\nfunction getGlobalContext() {\n\treturn typeof global !== 'undefined' ? global : (window as any)\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect =\n\ttypeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useMemo } from 'react'\n\nimport type { FactoryOrInstance } from './types.js'\n\nexport function useOptionalFactory<T>(\n\targ: FactoryOrInstance<T>,\n\tdeps?: unknown[],\n): T {\n\tconst memoDeps = [...(deps || [])]\n\tif (deps == null && typeof arg !== 'function') {\n\t\tmemoDeps.push(arg)\n\t}\n\treturn useMemo<T>(() => {\n\t\treturn typeof arg === 'function' ? (arg as () => T)() : (arg as T)\n\t}, memoDeps)\n}\n","import { useMemo } from 'react'\n\nimport type { TargetConnector } from '../../internals/index.js'\n\nexport function useConnectDropTarget(connector: TargetConnector) {\n\treturn useMemo(() => connector.hooks.dropTarget(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { RefObject } from 'react'\n\nimport type { DropTargetOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport type { Connector } from './SourceConnector.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport class TargetConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdropTarget: (node: any, options: DropTargetOptions) => {\n\t\t\tthis.clearDropTarget()\n\t\t\tthis.dropTargetOptions = options\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dropTargetRef = node\n\t\t\t} else {\n\t\t\t\tthis.dropTargetNode = node\n\t\t\t}\n\t\t\tthis.reconnect()\n\t\t},\n\t})\n\n\tprivate handlerId: Identifier | null = null\n\t// The drop target may either be attached via ref or connect function\n\tprivate dropTargetRef: RefObject<any> | null = null\n\tprivate dropTargetNode: any\n\tprivate dropTargetOptionsInternal: DropTargetOptions | null = null\n\tprivate unsubscribeDropTarget: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDropTarget: any = null\n\tprivate lastConnectedDropTargetOptions: DropTargetOptions | null = null\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dropTarget\n\t}\n\n\tpublic reconnect(): void {\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didDropTargetChange() ||\n\t\t\tthis.didOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDropTarget()\n\t\t}\n\n\t\tconst dropTarget = this.dropTarget\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dropTarget) {\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\tthis.lastConnectedDropTargetOptions = this.dropTargetOptions\n\n\t\t\tthis.unsubscribeDropTarget = this.backend.connectDropTarget(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdropTarget,\n\t\t\t\tthis.dropTargetOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (newHandlerId === this.handlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get dropTargetOptions(): DropTargetOptions {\n\t\treturn this.dropTargetOptionsInternal\n\t}\n\tpublic set dropTargetOptions(options: DropTargetOptions) {\n\t\tthis.dropTargetOptionsInternal = options\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didDropTargetChange(): boolean {\n\t\treturn this.lastConnectedDropTarget !== this.dropTarget\n\t}\n\n\tprivate didOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDropTargetOptions,\n\t\t\tthis.dropTargetOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDropTarget() {\n\t\tif (this.unsubscribeDropTarget) {\n\t\t\tthis.unsubscribeDropTarget()\n\t\t\tthis.unsubscribeDropTarget = undefined\n\t\t}\n\t}\n\n\tprivate get dropTarget() {\n\t\treturn (\n\t\t\tthis.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current)\n\t\t)\n\t}\n\n\tprivate clearDropTarget() {\n\t\tthis.dropTargetRef = null\n\t\tthis.dropTargetNode = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DropTarget } from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\n\nexport class DropTargetImpl<O, R, P> implements DropTarget {\n\tpublic constructor(\n\t\tpublic spec: DropTargetHookSpec<O, R, P>,\n\t\tprivate monitor: DropTargetMonitor<O, R>,\n\t) {}\n\n\tpublic canDrop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\treturn spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true\n\t}\n\n\tpublic hover() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.hover) {\n\t\t\tspec.hover(monitor.getItem(), monitor)\n\t\t}\n\t}\n\n\tpublic drop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.drop) {\n\t\t\treturn spec.drop(monitor.getItem(), monitor)\n\t\t}\n\t\treturn\n\t}\n}\n","import type { TargetConnector } from '../../internals/index.js'\nimport { registerTarget } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useAccept } from './useAccept.js'\nimport { useDropTarget } from './useDropTarget.js'\n\nexport function useRegisteredDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n\tconnector: TargetConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst dropTarget = useDropTarget(spec, monitor)\n\tconst accept = useAccept(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDropTarget() {\n\t\t\tconst [handlerId, unregister] = registerTarget(\n\t\t\t\taccept,\n\t\t\t\tdropTarget,\n\t\t\t\tmanager,\n\t\t\t)\n\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\treturn unregister\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tmonitor,\n\t\t\tdropTarget,\n\t\t\tconnector,\n\t\t\taccept.map((a) => a.toString()).join('|'),\n\t\t],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { DropTargetImpl } from './DropTargetImpl.js'\n\nexport function useDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n) {\n\tconst dropTarget = useMemo(() => new DropTargetImpl(spec, monitor), [monitor])\n\tuseEffect(() => {\n\t\tdropTarget.spec = spec\n\t}, [spec])\n\treturn dropTarget\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DropTargetHookSpec } from '../types.js'\n\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\nexport function useAccept<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n): Identifier[] {\n\tconst { accept } = spec\n\treturn useMemo(() => {\n\t\tinvariant(spec.accept != null, 'accept must be defined')\n\t\treturn Array.isArray(accept) ? accept : [accept]\n\t}, [accept])\n}\n","import type { ConnectDropTarget } from '../../types/index.js'\nimport type { DropTargetHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDropTarget } from './connectors.js'\nimport { useDropTargetConnector } from './useDropTargetConnector.js'\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js'\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js'\n\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrop<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDropTargetHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDropTarget] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tconst monitor = useDropTargetMonitor<DragObject, DropResult>()\n\tconst connector = useDropTargetConnector(spec.options)\n\tuseRegisteredDropTarget(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDropTarget(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DropTargetMonitorImpl } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDropTargetMonitor<O, R>(): DropTargetMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo(() => new DropTargetMonitorImpl(manager), [manager])\n}\n","import { useMemo } from 'react'\n\nimport { TargetConnector } from '../../internals/index.js'\nimport type { DropTargetOptions } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDropTargetConnector(\n\toptions: DropTargetOptions,\n): TargetConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new TargetConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dropTargetOptions = options || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDropTarget()\n\t}, [options])\n\treturn connector\n}\n","export interface Ref<T> {\n\tcurrent: T\n}\n\nexport function isRef(obj: unknown): boolean {\n\treturn (\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\tObject.prototype.hasOwnProperty.call(obj, 'current')\n\t)\n}\n","import type { DragDropManager } from 'dnd-core'\nimport { createContext } from 'react'\n\n/**\n * The React context type\n */\nexport interface DndContextType {\n\tdragDropManager: DragDropManager | undefined\n}\n\n/**\n * Create the React Context\n */\nexport const DndContext = createContext<DndContextType>({\n\tdragDropManager: undefined,\n})\n","import { invariant } from '@react-dnd/invariant'\nimport type { ReactElement } from 'react'\nimport { cloneElement, isValidElement } from 'react'\n\nfunction throwIfCompositeComponentElement(element: ReactElement<any>) {\n\t// Custom components can no longer be wrapped directly in React DnD 2.0\n\t// so that we don't need to depend on findDOMNode() from react-dom.\n\tif (typeof element.type === 'string') {\n\t\treturn\n\t}\n\n\tconst displayName =\n\t\t(element.type as any).displayName || element.type.name || 'the component'\n\n\tthrow new Error(\n\t\t'Only native element nodes can now be passed to React DnD connectors.' +\n\t\t\t`You can either wrap ${displayName} into a <div>, or turn it into a ` +\n\t\t\t'drag source or a drop target itself.',\n\t)\n}\n\nfunction wrapHookToRecognizeElement(hook: (node: any, options: any) => void) {\n\treturn (elementOrNode = null, options = null) => {\n\t\t// When passed a node, call the hook straight away.\n\t\tif (!isValidElement(elementOrNode)) {\n\t\t\tconst node = elementOrNode\n\t\t\thook(node, options)\n\t\t\t// return the node so it can be chained (e.g. when within callback refs\n\t\t\t// <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\t\t\treturn node\n\t\t}\n\n\t\t// If passed a ReactElement, clone it and attach this function as a ref.\n\t\t// This helps us achieve a neat API where user doesn't even know that refs\n\t\t// are being used under the hood.\n\t\tconst element: ReactElement | null = elementOrNode\n\t\tthrowIfCompositeComponentElement(element as any)\n\n\t\t// When no options are passed, use the hook directly\n\t\tconst ref = options ? (node: Element) => hook(node, options) : hook\n\t\treturn cloneWithRef(element, ref)\n\t}\n}\n\nexport function wrapConnectorHooks(hooks: any) {\n\tconst wrappedHooks: any = {}\n\n\tObject.keys(hooks).forEach((key) => {\n\t\tconst hook = hooks[key]\n\n\t\t// ref objects should be passed straight through without wrapping\n\t\tif (key.endsWith('Ref')) {\n\t\t\twrappedHooks[key] = hooks[key]\n\t\t} else {\n\t\t\tconst wrappedHook = wrapHookToRecognizeElement(hook)\n\t\t\twrappedHooks[key] = () => wrappedHook\n\t\t}\n\t})\n\n\treturn wrappedHooks\n}\n\nfunction setRef(ref: any, node: any) {\n\tif (typeof ref === 'function') {\n\t\tref(node)\n\t} else {\n\t\tref.current = node\n\t}\n}\n\nfunction cloneWithRef(element: any, newRef: any): ReactElement<any> {\n\tconst previousRef = element.ref\n\tinvariant(\n\t\ttypeof previousRef !== 'string',\n\t\t'Cannot connect React DnD to an element with an existing string ref. ' +\n\t\t\t'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n\t\t\t'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs',\n\t)\n\n\tif (!previousRef) {\n\t\t// When there is no ref on the element, use the new ref directly\n\t\treturn cloneElement(element, {\n\t\t\tref: newRef,\n\t\t})\n\t} else {\n\t\treturn cloneElement(element, {\n\t\t\tref: (node: any) => {\n\t\t\t\tsetRef(previousRef, node)\n\t\t\t\tsetRef(newRef, node)\n\t\t\t},\n\t\t})\n\t}\n}\n","import type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\nexport function useMonitorOutput<Monitor extends HandlerManager, Collected>(\n\tmonitor: Monitor & MonitorEventEmitter,\n\tcollect: (monitor: Monitor) => Collected,\n\tonCollect?: () => void,\n): Collected {\n\tconst [collected, updateCollected] = useCollector(monitor, collect, onCollect)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction subscribeToMonitorStateChange() {\n\t\t\tconst handlerId = monitor.getHandlerId()\n\t\t\tif (handlerId == null) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn monitor.subscribeToStateChange(updateCollected, {\n\t\t\t\thandlerIds: [handlerId],\n\t\t\t})\n\t\t},\n\t\t[monitor, updateCollected],\n\t)\n\n\treturn collected\n}\n","import equal from 'fast-deep-equal'\nimport { useCallback, useState } from 'react'\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector<T, S>(\n\tmonitor: T,\n\tcollect: (monitor: T) => S,\n\tonUpdate?: () => void,\n): [S, () => void] {\n\tconst [collected, setCollected] = useState(() => collect(monitor))\n\n\tconst updateCollected = useCallback(() => {\n\t\tconst nextValue = collect(monitor)\n\t\t// This needs to be a deep-equality check because some monitor-collected values\n\t\t// include XYCoord objects that may be equivalent, but do not have instance equality.\n\t\tif (!equal(collected, nextValue)) {\n\t\t\tsetCollected(nextValue)\n\t\t\tif (onUpdate) {\n\t\t\t\tonUpdate()\n\t\t\t}\n\t\t}\n\t}, [collected, monitor, onUpdate])\n\n\t// update the collected properties after react renders.\n\t// Note that the \"Dustbin Stress Test\" fails if this is not\n\t// done when the component updates\n\tuseIsomorphicLayoutEffect(updateCollected)\n\n\treturn [collected, updateCollected]\n}\n","import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n","// cheap lodash replacements\n\nexport function memoize<T>(fn: () => T): () => T {\n\tlet result: T | null = null\n\tconst memoized = () => {\n\t\tif (result == null) {\n\t\t\tresult = fn()\n\t\t}\n\t\treturn result\n\t}\n\treturn memoized\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T) {\n\treturn items.filter((i) => i !== item)\n}\n\nexport function union<T extends string | number>(itemsA: T[], itemsB: T[]) {\n\tconst set = new Set<T>()\n\tconst insertItem = (item: T) => set.add(item)\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tset.forEach((key) => result.push(key))\n\treturn result\n}\n","import { union, without } from './utils/js_utils.js'\n\ntype NodePredicate = (node: Node | null | undefined) => boolean\n\nexport class EnterLeaveCounter {\n\tprivate entered: any[] = []\n\tprivate isNodeInDocument: NodePredicate\n\n\tpublic constructor(isNodeInDocument: NodePredicate) {\n\t\tthis.isNodeInDocument = isNodeInDocument\n\t}\n\n\tpublic enter(enteringNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tconst isNodeEntered = (node: Node): boolean =>\n\t\t\tthis.isNodeInDocument(node) &&\n\t\t\t(!node.contains || node.contains(enteringNode as Node))\n\n\t\tthis.entered = union(this.entered.filter(isNodeEntered), [enteringNode])\n\n\t\treturn previousLength === 0 && this.entered.length > 0\n\t}\n\n\tpublic leave(leavingNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tthis.entered = without(\n\t\t\tthis.entered.filter(this.isNodeInDocument),\n\t\t\tleavingNode,\n\t\t)\n\n\t\treturn previousLength > 0 && this.entered.length === 0\n\t}\n\n\tpublic reset(): void {\n\t\tthis.entered = []\n\t}\n}\n","import type { DragDropMonitor } from 'dnd-core'\n\nimport type { NativeItemConfig } from './nativeTypesConfig.js'\n\nexport class NativeDragSource {\n\tpublic item: any\n\tprivate config: NativeItemConfig\n\n\tpublic constructor(config: NativeItemConfig) {\n\t\tthis.config = config\n\t\tthis.item = {}\n\t\tthis.initializeExposedProperties()\n\t}\n\n\tprivate initializeExposedProperties() {\n\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\tObject.defineProperty(this.item, property, {\n\t\t\t\tconfigurable: true, // This is needed to allow redefining it later\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Browser doesn't allow reading \"${property}\" until the drop event.`,\n\t\t\t\t\t)\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic loadDataTransfer(dataTransfer: DataTransfer | null | undefined): void {\n\t\tif (dataTransfer) {\n\t\t\tconst newProperties: PropertyDescriptorMap = {}\n\t\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\t\tconst propertyFn = this.config.exposeProperties[property]\n\t\t\t\tif (propertyFn != null) {\n\t\t\t\t\tnewProperties[property] = {\n\t\t\t\t\t\tvalue: propertyFn(dataTransfer, this.config.matchesTypes),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tObject.defineProperties(this.item, newProperties)\n\t\t}\n\t}\n\n\tpublic canDrag(): boolean {\n\t\treturn true\n\t}\n\n\tpublic beginDrag(): any {\n\t\treturn this.item\n\t}\n\n\tpublic isDragging(monitor: DragDropMonitor, handle: string): boolean {\n\t\treturn handle === monitor.getSourceId()\n\t}\n\n\tpublic endDrag(): void {\n\t\t// empty\n\t}\n}\n","export const FILE = '__NATIVE_FILE__'\nexport const URL = '__NATIVE_URL__'\nexport const TEXT = '__NATIVE_TEXT__'\nexport const HTML = '__NATIVE_HTML__'\n","export function getDataFromDataTransfer(\n\tdataTransfer: DataTransfer,\n\ttypesToTry: string[],\n\tdefaultValue: string,\n): string {\n\tconst result = typesToTry.reduce(\n\t\t(resultSoFar, typeToTry) => resultSoFar || dataTransfer.getData(typeToTry),\n\t\t'',\n\t)\n\n\treturn result != null ? result : defaultValue\n}\n","import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n","import { NativeDragSource } from './NativeDragSource.js'\nimport { nativeTypesConfig } from './nativeTypesConfig.js'\n\nexport function createNativeDragSource(\n\ttype: string,\n\tdataTransfer?: DataTransfer,\n): NativeDragSource {\n\tconst config = nativeTypesConfig[type]\n\tif (!config) {\n\t\tthrow new Error(`native type ${type} has no configuration`)\n\t}\n\tconst result = new NativeDragSource(config)\n\tresult.loadDataTransfer(dataTransfer)\n\treturn result\n}\n\nexport function matchNativeItemType(\n\tdataTransfer: DataTransfer | null,\n): string | null {\n\tif (!dataTransfer) {\n\t\treturn null\n\t}\n\n\tconst dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || [])\n\treturn (\n\t\tObject.keys(nativeTypesConfig).filter((nativeItemType) => {\n\t\t\tconst typeConfig = nativeTypesConfig[nativeItemType]\n\t\t\tif (!typeConfig?.matchesTypes) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn typeConfig.matchesTypes.some(\n\t\t\t\t(t) => dataTransferTypes.indexOf(t) > -1,\n\t\t\t)\n\t\t})[0] || null\n\t)\n}\n","import { memoize } from './utils/js_utils.js'\n\ndeclare global {\n\tinterface Window extends HTMLElement {\n\t\tsafari: any\n\t}\n}\n\nexport type Predicate = () => boolean\nexport const isFirefox: Predicate = memoize(() =>\n\t/firefox/i.test(navigator.userAgent),\n)\nexport const isSafari: Predicate = memoize(() => Boolean(window.safari))\n","export class MonotonicInterpolant {\n\tprivate xs: any\n\tprivate ys: any\n\tprivate c1s: any\n\tprivate c2s: any\n\tprivate c3s: any\n\n\tpublic constructor(xs: number[], ys: number[]) {\n\t\tconst { length } = xs\n\n\t\t// Rearrange xs and ys so that xs is sorted\n\t\tconst indexes = []\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tindexes.push(i)\n\t\t}\n\t\tindexes.sort((a, b) => ((xs[a] as number) < (xs[b] as number) ? -1 : 1))\n\n\t\t// Get consecutive differences and slopes\n\t\tconst dys = []\n\t\tconst dxs = []\n\t\tconst ms = []\n\t\tlet dx\n\t\tlet dy\n\t\tfor (let i = 0; i < length - 1; i++) {\n\t\t\tdx = (xs[i + 1] as number) - (xs[i] as number)\n\t\t\tdy = (ys[i + 1] as number) - (ys[i] as number)\n\t\t\tdxs.push(dx)\n\t\t\tdys.push(dy)\n\t\t\tms.push(dy / dx)\n\t\t}\n\n\t\t// Get degree-1 coefficients\n\t\tconst c1s = [ms[0]]\n\t\tfor (let i = 0; i < dxs.length - 1; i++) {\n\t\t\tconst m2 = ms[i] as number\n\t\t\tconst mNext = ms[i + 1] as number\n\t\t\tif (m2 * mNext <= 0) {\n\t\t\t\tc1s.push(0)\n\t\t\t} else {\n\t\t\t\tdx = dxs[i] as number\n\t\t\t\tconst dxNext = dxs[i + 1] as number\n\t\t\t\tconst common = dx + dxNext\n\t\t\t\tc1s.push(\n\t\t\t\t\t(3 * common) / ((common + dxNext) / m2 + (common + dx) / mNext),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tc1s.push(ms[ms.length - 1])\n\n\t\t// Get degree-2 and degree-3 coefficients\n\t\tconst c2s = []\n\t\tconst c3s = []\n\t\tlet m\n\t\tfor (let i = 0; i < c1s.length - 1; i++) {\n\t\t\tm = ms[i] as number\n\t\t\tconst c1 = c1s[i] as number\n\t\t\tconst invDx = 1 / (dxs[i] as number)\n\t\t\tconst common = c1 + (c1s[i + 1] as number) - m - m\n\t\t\tc2s.push((m - c1 - common) * invDx)\n\t\t\tc3s.push(common * invDx * invDx)\n\t\t}\n\n\t\tthis.xs = xs\n\t\tthis.ys = ys\n\t\tthis.c1s = c1s\n\t\tthis.c2s = c2s\n\t\tthis.c3s = c3s\n\t}\n\n\tpublic interpolate(x: number): number {\n\t\tconst { xs, ys, c1s, c2s, c3s } = this\n\n\t\t// The rightmost point in the dataset should give an exact result\n\t\tlet i = xs.length - 1\n\t\tif (x === xs[i]) {\n\t\t\treturn ys[i]\n\t\t}\n\n\t\t// Search for the interval x is in, returning the corresponding y if x is one of the original xs\n\t\tlet low = 0\n\t\tlet high = c3s.length - 1\n\t\tlet mid\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor(0.5 * (low + high))\n\t\t\tconst xHere = xs[mid]\n\t\t\tif (xHere < x) {\n\t\t\t\tlow = mid + 1\n\t\t\t} else if (xHere > x) {\n\t\t\t\thigh = mid - 1\n\t\t\t} else {\n\t\t\t\treturn ys[mid]\n\t\t\t}\n\t\t}\n\t\ti = Math.max(0, high)\n\n\t\t// Interpolate\n\t\tconst diff = x - xs[i]\n\t\tconst diffSq = diff * diff\n\t\treturn ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq\n\t}\n}\n","import type { XYCoord } from 'dnd-core'\n\nimport { isFirefox, isSafari } from './BrowserDetector.js'\nimport { MonotonicInterpolant } from './MonotonicInterpolant.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Node): XYCoord | null {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\n\tif (!el) {\n\t\treturn null\n\t}\n\n\tconst { top, left } = (el as HTMLElement).getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientOffset(e: MouseEvent): XYCoord {\n\treturn {\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t}\n}\n\nfunction isImageNode(node: any) {\n\treturn (\n\t\tnode.nodeName === 'IMG' &&\n\t\t(isFirefox() || !document.documentElement?.contains(node))\n\t)\n}\n\nfunction getDragPreviewSize(\n\tisImage: boolean,\n\tdragPreview: any,\n\tsourceWidth: number,\n\tsourceHeight: number,\n) {\n\tlet dragPreviewWidth = isImage ? dragPreview.width : sourceWidth\n\tlet dragPreviewHeight = isImage ? dragPreview.height : sourceHeight\n\n\t// Work around @2x coordinate discrepancies in browsers\n\tif (isSafari() && isImage) {\n\t\tdragPreviewHeight /= window.devicePixelRatio\n\t\tdragPreviewWidth /= window.devicePixelRatio\n\t}\n\treturn { dragPreviewWidth, dragPreviewHeight }\n}\n\nexport function getDragPreviewOffset(\n\tsourceNode: HTMLElement,\n\tdragPreview: HTMLElement,\n\tclientOffset: XYCoord,\n\tanchorPoint: { anchorX: number; anchorY: number },\n\toffsetPoint: { offsetX: number; offsetY: number },\n): XYCoord {\n\t// The browsers will use the image intrinsic size under different conditions.\n\t// Firefox only cares if it's an image, but WebKit also wants it to be detached.\n\tconst isImage = isImageNode(dragPreview)\n\tconst dragPreviewNode = isImage ? sourceNode : dragPreview\n\tconst dragPreviewNodeOffsetFromClient = getNodeClientOffset(\n\t\tdragPreviewNode,\n\t) as XYCoord\n\tconst offsetFromDragPreview = {\n\t\tx: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n\t\ty: clientOffset.y - dragPreviewNodeOffsetFromClient.y,\n\t}\n\tconst { offsetWidth: sourceWidth, offsetHeight: sourceHeight } = sourceNode\n\tconst { anchorX, anchorY } = anchorPoint\n\tconst { dragPreviewWidth, dragPreviewHeight } = getDragPreviewSize(\n\t\tisImage,\n\t\tdragPreview,\n\t\tsourceWidth,\n\t\tsourceHeight,\n\t)\n\n\tconst calculateYOffset = () => {\n\t\tconst interpolantY = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the top\n\t\t\t\toffsetFromDragPreview.y,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.y / sourceHeight) * dragPreviewHeight,\n\t\t\t\t// Dock to the bottom\n\t\t\t\toffsetFromDragPreview.y + dragPreviewHeight - sourceHeight,\n\t\t\t],\n\t\t)\n\t\tlet y = interpolantY.interpolate(anchorY)\n\t\t// Work around Safari 8 positioning bug\n\t\tif (isSafari() && isImage) {\n\t\t\t// We'll have to wait for @3x to see if this is entirely correct\n\t\t\ty += (window.devicePixelRatio - 1) * dragPreviewHeight\n\t\t}\n\t\treturn y\n\t}\n\n\tconst calculateXOffset = () => {\n\t\t// Interpolate coordinates depending on anchor point\n\t\t// If you know a simpler way to do this, let me know\n\t\tconst interpolantX = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the left\n\t\t\t\toffsetFromDragPreview.x,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.x / sourceWidth) * dragPreviewWidth,\n\t\t\t\t// Dock to the right\n\t\t\t\toffsetFromDragPreview.x + dragPreviewWidth - sourceWidth,\n\t\t\t],\n\t\t)\n\t\treturn interpolantX.interpolate(anchorX)\n\t}\n\n\t// Force offsets if specified in the options.\n\tconst { offsetX, offsetY } = offsetPoint\n\tconst isManualOffsetX = offsetX === 0 || offsetX\n\tconst isManualOffsetY = offsetY === 0 || offsetY\n\treturn {\n\t\tx: isManualOffsetX ? offsetX : calculateXOffset(),\n\t\ty: isManualOffsetY ? offsetY : calculateYOffset(),\n\t}\n}\n","import type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport class OptionsReader {\n\tpublic ownerDocument: Document | null = null\n\tprivate globalContext: HTML5BackendContext\n\tprivate optionsArgs: HTML5BackendOptions | undefined\n\n\tpublic constructor(\n\t\tglobalContext: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.globalContext = globalContext\n\t\tthis.optionsArgs = options\n\t}\n\n\tpublic get window(): Window | undefined {\n\t\tif (this.globalContext) {\n\t\t\treturn this.globalContext\n\t\t} else if (typeof window !== 'undefined') {\n\t\t\treturn window\n\t\t}\n\t\treturn undefined\n\t}\n\n\tpublic get document(): Document | undefined {\n\t\tif (this.globalContext?.document) {\n\t\t\treturn this.globalContext.document\n\t\t} else if (this.window) {\n\t\t\treturn this.window.document\n\t\t} else {\n\t\t\treturn undefined\n\t\t}\n\t}\n\n\tpublic get rootElement(): Node | undefined {\n\t\treturn this.optionsArgs?.rootElement || this.window\n\t}\n}\n","import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n","import type { BackendFactory, DragDropManager } from 'dnd-core'\n\nimport { HTML5BackendImpl } from './HTML5BackendImpl.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\nexport { getEmptyImage } from './getEmptyImage.js'\nexport * as NativeTypes from './NativeTypes.js'\nexport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport const HTML5Backend: BackendFactory = function createBackend(\n\tmanager: DragDropManager,\n\tcontext?: HTML5BackendContext,\n\toptions?: HTML5BackendOptions,\n): HTML5BackendImpl {\n\treturn new HTML5BackendImpl(manager, context, options)\n}\n"],"names":["invariant","condition","format","_len","arguments","length","args","Array","_key","process","undefined","Error","error","argIndex","replace","name","framesToPop","b","a","autoBom","console","warn","test","type","Blob","c","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","send","status","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","readAsDataURL","l","m","module","exports","useDragDropManager","dragDropManager","useContext","DndContext","equal","constructor","keys","isArray","RegExp","source","flags","valueOf","Object","toString","hasOwnProperty","call","key","useConnectDragSource","connector","useMemo","hooks","dragSource","useConnectDragPreview","dragPreview","SourceConnector","receiveHandlerId","newHandlerId","this","handlerId","reconnect","connectTarget","dragSourceOptions","dragSourceOptionsInternal","options","dragPreviewOptions","dragPreviewOptionsInternal","didChange","reconnectDragSource","reconnectDragPreview","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","dragSourceUnsubscribe","backend","connectDragSource","forceDidChange","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","lastConnectedDragPreview","lastConnectedDragPreviewOptions","dragPreviewUnsubscribe","connectDragPreview","shallowEqual","dragPreviewNode","dragPreviewRef","dragSourceNode","dragSourceRef","current","clearDragSource","clearDragPreview","wrapConnectorHooks","node","isRef","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","sourceId","getHandlerId","canDrag","internalMonitor","canDragSource","isDragging","isDraggingSource","subscribeToStateChange","listener","isOverTarget","targetId","getTargetIds","isSourcePublic","getSourceId","subscribeToOffsetChange","canDropOnTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","manager","getMonitor","DragSourceImpl","beginDrag","spec","monitor","item","globalMonitor","endDrag","end","useRegisteredDragSource","handler","useEffect","useDragSource","itemType","useDragType","useIsomorphicLayoutEffect","unregister","registerSource","useDrag","specArg","deps","useOptionalFactory","begin","useDragSourceMonitor","getBackend","useDragSourceConnector","previewOptions","useCollectedProps","collect","registerTarget","registry","getRegistry","addTarget","removeTarget","addSource","removeSource","objA","objB","compare","compareContext","compareResult","keysA","keysB","bHasOwnProperty","bind","idx","valueA","valueB","isObject","input","INIT_COORDS","BEGIN_DRAG","PUBLISH_DRAG_SOURCE","HOVER","DROP","END_DRAG","setClientOffset","clientOffset","sourceClientOffset","payload","ResetCoordinatesAction","createBeginDrag","sourceIds","publishSource","dispatch","forEach","getSource","verifyInvariants","getDraggableSource","verifyGetSourceClientOffsetIsFunction","verifyItemIsObject","pinSource","getSourceType","_defineProperty","obj","value","createDrop","targetIds","filter","reverse","getDroppableTargets","index","dropResult","getTarget","drop","verifyDropResultType","determineDropResult","action","_objectSpread","createEndDrag","verifyIsDragging","unpinSource","matchesType","targetType","draggedItemType","some","t","createHover","targetIdsArg","verifyTargetIdsIsArray","slice","getTargetType","splice","removeNonMatchingTargetIds","lastIndexOf","checkInvariants","hover","hoverAllTargets","createPublishDragSource","DragDropManagerImpl","receiveBackend","getActions","store","actions","publishDragSource","createDragDropActions","reduce","boundActions","actionCreator","apply","isSetUp","handleRefCountChange","shouldSetUp","getState","refCount","setup","teardown","subscribe","subtract","x","y","NONE","ALL","__IS_NONE__","__IS_ALL__","DragDropMonitorImpl","handlerIds","prevStateId","stateId","handleChange","state","currentStateId","canSkipListener","dirtyIds","itemsB","indexOf","areDirty","dirtyHandlerIds","previousState","dragOffset","nextState","canDrop","Boolean","shallow","dragOperation","initialClientOffset","initialSourceClientOffset","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromTimer","callback","timeoutHandle","handleTimer","intervalHandle","setInterval","clearTimeout","clearInterval","makeRequestCall","toggle","observer","createTextNode","observe","characterData","data","RawTask","task","onError","release","asapQueue","enqueueTask","queue","q","requestFlush","flushing","pendingErrors","capacity","flush","currentIndex","scan","newLength","registerPendingError","err","push","requestErrorThrow","shift","taskFactory","create","tasks","freeTasks","t1","pop","ADD_SOURCE","ADD_TARGET","REMOVE_SOURCE","REMOVE_TARGET","validateType","allowArray","HandlerRole","nextUniqueId","getNextHandlerId","role","id","SOURCE","TARGET","parseRoleFromHandlerId","mapContainsValue","map","searchValue","entries","isDone","done","next","HandlerRegistryImpl","validateSourceContract","addHandler","validateTargetContract","containsHandler","dragSources","dropTargets","includePinned","isSourceId","pinnedSourceId","pinnedSource","get","isTargetId","types","delete","set","Map","strictEquality","prevTargetIds","itemsA","insertItem","has","count","xor","isEqual","areArraysEqual","prevInnermostTargetId","innermostTargetId","initialState","offsetA","offsetB","items","path","defaultValue","split","createDragDropManager","backendFactory","globalContext","backendOptions","debugMode","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","createStore","instanceId","makeStoreInstance","_objectWithoutProperties","excluded","INSTANCE_SYM","Symbol","for","DndProvider","memo","_param","children","props","isGlobalInstance","context","getGlobalContext","ctx","createSingletonDndContext","getDndContextValue","_jsx","Provider","useLayoutEffect","arg","memoDeps","useConnectDropTarget","dropTarget","TargetConnector","didDropTargetChange","didOptionsChange","disconnectDropTarget","lastConnectedDropTarget","lastConnectedDropTargetOptions","dropTargetOptions","unsubscribeDropTarget","connectDropTarget","dropTargetOptionsInternal","dropTargetNode","dropTargetRef","clearDropTarget","isCallingCanDrop","DropTargetMonitorImpl","isOver","DropTargetImpl","useRegisteredDropTarget","useDropTarget","accept","useAccept","join","useDrop","useDropTargetMonitor","useDropTargetConnector","createContext","wrapHookToRecognizeElement","hook","elementOrNode","isValidElement","element","displayName","throwIfCompositeComponentElement","newRef","previousRef","ref","cloneElement","setRef","cloneWithRef","wrappedHooks","endsWith","wrappedHook","useMonitorOutput","onCollect","collected","updateCollected","onUpdate","setCollected","useState","useCallback","nextValue","useCollector","collector","memoize","fn","memoized","EnterLeaveCounter","enter","enteringNode","previousLength","entered","Set","add","union","isNodeInDocument","contains","leave","leavingNode","reset","NativeDragSource","initializeExposedProperties","config","exposeProperties","property","defineProperty","configurable","enumerable","loadDataTransfer","dataTransfer","newProperties","propertyFn","matchesTypes","defineProperties","handle","FILE","TEXT","HTML","getDataFromDataTransfer","typesToTry","resultSoFar","typeToTry","getData","nativeTypesConfig","NativeTypes","files","html","urls","text","matchNativeItemType","dataTransferTypes","nativeItemType","typeConfig","isFirefox","isSafari","MonotonicInterpolant","interpolate","xs","ys","c1s","c2s","c3s","mid","low","high","Math","floor","xHere","max","diff","diffSq","indexes","sort","dys","dxs","ms","dx","dy","i1","i2","m2","mNext","dxNext","common","i3","c1","invDx","getNodeClientOffset","el","nodeType","parentElement","top","left","getBoundingClientRect","getEventClientOffset","clientX","clientY","getDragPreviewOffset","sourceNode","anchorPoint","offsetPoint","isImage","nodeName","documentElement","isImageNode","dragPreviewNodeOffsetFromClient","offsetFromDragPreview","offsetWidth","sourceWidth","offsetHeight","sourceHeight","anchorX","anchorY","dragPreviewWidth","dragPreviewHeight","width","height","devicePixelRatio","getDragPreviewSize","offsetX","offsetY","isManualOffsetY","calculateYOffset","OptionsReader","rootElement","optionsArgs","ownerDocument","HTML5BackendImpl","profile","ref1","sourcePreviewNodes","size","sourcePreviewNodeOptions","sourceNodeOptions","sourceNodes","dragStartSourceIds","dropTargetIds","dragEnterTargetIds","dragOverTargetIds","root","__isReactDndBackendSetUp","addEventListeners","removeEventListeners","clearCurrentDragSourceNode","asyncEndDragFrameId","cancelAnimationFrame","handleDragStart","handleSelectStart","setAttribute","addEventListener","removeEventListener","handleDragEnter","handleDragOver","handleDrop","handleTopDragStart","handleTopDragStartCapture","handleTopDragEndCapture","handleTopDragEnter","handleTopDragEnterCapture","handleTopDragLeaveCapture","handleTopDragOver","handleTopDragOverCapture","handleTopDrop","handleTopDropCapture","getCurrentSourceNodeOptions","dropEffect","altKeyPressed","getCurrentDropEffect","isDraggingNativeItem","getCurrentSourcePreviewNodeOptions","captureDraggingState","beginDragNativeItem","currentNativeSource","createNativeDragSource","currentNativeHandle","setCurrentDragSourceNode","currentDragSourceNode","mouseMoveTimeoutTimer","endDragIfSourceWasRemovedFromDOM","defaultPrevented","unshift","_e","lastClientOffset","hoverRafId","endDragNativeItem","cancelHover","scheduleHover","requestAnimationFrame","nativeType","setDragImage","dragPreviewOffset","setData","hasAttribute","preventDefault","enterLeaveCounter","altKey","dragDrop","tagName","isContentEditable","HTML5Backend"],"sourceRoot":""}