{"version":3,"file":"static/js/650.e5ed9cc3.chunk.js","mappings":"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","sources":["views/auth-views/components/RegisterForm.js","history.js","auth/FetchInterceptor.js","services/JwtAuthService.js","views/auth-views/authentication/register-1/index.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { LockOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Alert } from \"antd\";\r\nimport { showAuthMessage, showLoading, hideAuthMessage, authenticated } from 'redux/actions/Auth';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\"\r\nimport JwtAuthService from 'services/JwtAuthService'\r\n\r\nconst rules = {\r\n\temail: [\r\n\t\t{ \r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please input your email address'\r\n\t\t},\r\n\t\t{ \r\n\t\t\ttype: 'email',\r\n\t\t\tmessage: 'Please enter a validate email!'\r\n\t\t}\r\n\t],\r\n\tpassword: [\r\n\t\t{ \r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please input your password'\r\n\t\t}\r\n\t],\r\n\tconfirm: [\r\n\t\t{ \r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please confirm your password!'\r\n\t\t},\r\n\t\t({ getFieldValue }) => ({\r\n\t\t\tvalidator(rule, value) {\r\n\t\t\t\tif (!value || getFieldValue('password') === value) {\r\n\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t}\r\n\t\t\t\treturn Promise.reject('Passwords do not match!');\r\n\t\t\t},\r\n\t\t})\r\n\t]\r\n}\r\n\r\nexport const RegisterForm = (props) => {\r\n\r\n\tconst { showLoading, token, loading, redirect, message, showMessage, hideAuthMessage, authenticated, allowRedirect } = props\r\n\tconst [form] = Form.useForm();\r\n\tlet history = useHistory();\r\n\r\n\tconst onSignUp = () => {\r\n    \tform.validateFields().then(values => {\r\n\t\t\tshowLoading()\r\n\t\t\tconst fakeToken = 'fakeToken'\r\n\t\t\tJwtAuthService.signUp(values).then(resp => {\r\n\t\t\t\tauthenticated(fakeToken)\r\n\t\t\t}).then(e => {\r\n\t\t\t\tshowAuthMessage(e)\r\n\t\t\t})\r\n\t\t}).catch(info => {\r\n\t\t\tconsole.log('Validate Failed:', info);\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n    \tif (token !== null && allowRedirect) {\r\n\t\t\thistory.push(redirect)\r\n\t\t}\r\n\t\tif(showMessage) {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\thideAuthMessage();\r\n\t\t\t}, 3000);\r\n\t\t}\r\n  });\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<motion.div \r\n\t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }} \r\n\t\t\t\tanimate={{ \r\n\t\t\t\t\topacity: showMessage ? 1 : 0,\r\n\t\t\t\t\tmarginBottom: showMessage ? 20 : 0 \r\n\t\t\t\t}}> \r\n\t\t\t\t<Alert type=\"error\" showIcon message={message}></Alert>\r\n\t\t\t</motion.div>\r\n\t\t\t<Form form={form} layout=\"vertical\" name=\"register-form\" onFinish={onSignUp}>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\tlabel=\"Email\" \r\n\t\t\t\t\trules={rules.email}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input prefix={<MailOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"password\" \r\n\t\t\t\t\tlabel=\"Password\" \r\n\t\t\t\t\trules={rules.password}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"confirm\" \r\n\t\t\t\t\tlabel=\"ConfirmPassword\" \r\n\t\t\t\t\trules={rules.confirm}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({auth}) => {\r\n\tconst { loading, message, showMessage, token, redirect } = auth;\r\n  return { loading, message, showMessage, token, redirect }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tshowAuthMessage,\r\n\thideAuthMessage,\r\n\tshowLoading,\r\n\tauthenticated\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm)\r\n","import * as history from 'history';\r\n\r\nexport default history.createBrowserHistory();","import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { notification } from 'antd';\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000\r\n})\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\t\r\n  if (jwtToken) {\r\n    config.headers[TOKEN_PAYLOAD_KEY] = jwtToken\r\n  }\r\n\r\n  if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n  Promise.reject(error)\r\n})\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\t\r\n\t// Remove token and redirect \r\n\tif (error.response.status === 400 || error.response.status === 403) {\r\n\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\tnotificationParam.description = 'Please login again'\r\n\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tif (error.response.status === 404) {\r\n\t\tnotificationParam.message = 'Not Found'\r\n\t}\r\n\r\n\tif (error.response.status === 500) {\r\n\t\tnotificationParam.message = 'Internal Server Error'\r\n\t}\r\n\t\r\n\tif (error.response.status === 508) {\r\n\t\tnotificationParam.message = 'Time Out'\r\n\t}\r\n\r\n\tnotification.error(notificationParam)\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service","import fetch from 'auth/FetchInterceptor'\r\n\r\nconst JwtAuthService = {}\r\n\r\nJwtAuthService.login = function (data) {\r\n\treturn fetch({\r\n\t\turl: '/posts',\r\n\t\tmethod: 'post',\r\n\t\theaders: {\r\n      'public-request': 'true'\r\n    },\r\n\t\tdata: data\r\n\t})\r\n}\r\n\r\nJwtAuthService.signUp = function (data) {\r\n\treturn fetch({\r\n\t\turl: '/auth/signup',\r\n\t\tmethod: 'post',\r\n\t\theaders: {\r\n      'public-request': 'true'\r\n    },\r\n\t\tdata: data\r\n\t})\r\n}\r\n\r\nexport default JwtAuthService","import React from 'react'\r\nimport RegisterForm from '../../components/RegisterForm'\r\nimport { Card, Row, Col } from \"antd\";\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst backgroundStyle = {\r\n\tbackgroundImage: 'url(/img/others/img-17.jpg)',\r\n\tbackgroundRepeat: 'no-repeat',\r\n\tbackgroundSize: 'cover'\r\n}\r\n\r\nconst RegisterOne = props => {\r\n\tconst theme = useSelector(state => state.theme.currentTheme)\r\n\treturn (\r\n\t\t<div className=\"h-100\" style={backgroundStyle}>\r\n\t\t\t<div className=\"container d-flex flex-column justify-content-center h-100\">\r\n\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t<Col xs={20} sm={20} md={20} lg={7}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<div className=\"my-2\">\r\n\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={`/img/${theme === 'light' ? 'logo.png': 'logo-white.png'}`} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-muted\">Create a new account:</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={20} lg={20}>\r\n\t\t\t\t\t\t\t\t\t\t<RegisterForm {...props}/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RegisterOne\r\n"],"names":["rules","email","required","message","type","password","confirm","_ref","getFieldValue","validator","rule","value","Promise","reject","resolve","mapDispatchToProps","showAuthMessage","hideAuthMessage","showLoading","authenticated","connect","_ref2","auth","loading","showMessage","token","redirect","props","allowRedirect","form","Form","useForm","history","useHistory","useEffect","push","setTimeout","_jsxs","_Fragment","children","_jsx","motion","div","initial","opacity","marginBottom","animate","Alert","showIcon","layout","name","onFinish","onSignUp","validateFields","then","values","JwtAuthService","signUp","resp","e","catch","info","console","log","Item","label","hasFeedback","Input","prefix","MailOutlined","className","Password","LockOutlined","Button","htmlType","block","service","axios","baseURL","API_BASE_URL","timeout","ENTRY_ROUTE","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","headers","window","location","reload","error","notification","response","data","notificationParam","status","description","removeItem","fetch","url","method","backgroundStyle","backgroundImage","backgroundRepeat","backgroundSize","theme","useSelector","state","currentTheme","style","Row","justify","Col","xs","sm","md","lg","Card","src","alt","RegisterForm"],"sourceRoot":""}